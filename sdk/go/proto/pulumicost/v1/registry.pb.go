// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: pulumicost/v1/registry.proto

package pbc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// DiscoverySource defines different plugin discovery mechanisms.
type DiscoverySource int32

const (
	DiscoverySource_DISCOVERY_SOURCE_UNSPECIFIED DiscoverySource = 0
	DiscoverySource_DISCOVERY_SOURCE_FILESYSTEM  DiscoverySource = 1 // Local filesystem scanning
	DiscoverySource_DISCOVERY_SOURCE_REGISTRY    DiscoverySource = 2 // Remote plugin registry
	DiscoverySource_DISCOVERY_SOURCE_URL         DiscoverySource = 3 // Direct URL download
	DiscoverySource_DISCOVERY_SOURCE_GIT         DiscoverySource = 4 // Git repository
)

// Enum value maps for DiscoverySource.
var (
	DiscoverySource_name = map[int32]string{
		0: "DISCOVERY_SOURCE_UNSPECIFIED",
		1: "DISCOVERY_SOURCE_FILESYSTEM",
		2: "DISCOVERY_SOURCE_REGISTRY",
		3: "DISCOVERY_SOURCE_URL",
		4: "DISCOVERY_SOURCE_GIT",
	}
	DiscoverySource_value = map[string]int32{
		"DISCOVERY_SOURCE_UNSPECIFIED": 0,
		"DISCOVERY_SOURCE_FILESYSTEM":  1,
		"DISCOVERY_SOURCE_REGISTRY":    2,
		"DISCOVERY_SOURCE_URL":         3,
		"DISCOVERY_SOURCE_GIT":         4,
	}
)

func (x DiscoverySource) Enum() *DiscoverySource {
	p := new(DiscoverySource)
	*p = x
	return p
}

func (x DiscoverySource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DiscoverySource) Descriptor() protoreflect.EnumDescriptor {
	return file_pulumicost_v1_registry_proto_enumTypes[0].Descriptor()
}

func (DiscoverySource) Type() protoreflect.EnumType {
	return &file_pulumicost_v1_registry_proto_enumTypes[0]
}

func (x DiscoverySource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DiscoverySource.Descriptor instead.
func (DiscoverySource) EnumDescriptor() ([]byte, []int) {
	return file_pulumicost_v1_registry_proto_rawDescGZIP(), []int{0}
}

// PluginStatus represents the current status of a plugin.
type PluginStatus int32

const (
	PluginStatus_PLUGIN_STATUS_UNSPECIFIED PluginStatus = 0
	PluginStatus_PLUGIN_STATUS_AVAILABLE   PluginStatus = 1 // Available for installation
	PluginStatus_PLUGIN_STATUS_INSTALLED   PluginStatus = 2 // Currently installed
	PluginStatus_PLUGIN_STATUS_ACTIVE      PluginStatus = 3 // Installed and running
	PluginStatus_PLUGIN_STATUS_INACTIVE    PluginStatus = 4 // Installed but not running
	PluginStatus_PLUGIN_STATUS_ERROR       PluginStatus = 5 // Error state
	PluginStatus_PLUGIN_STATUS_UPDATING    PluginStatus = 6 // Currently being updated
)

// Enum value maps for PluginStatus.
var (
	PluginStatus_name = map[int32]string{
		0: "PLUGIN_STATUS_UNSPECIFIED",
		1: "PLUGIN_STATUS_AVAILABLE",
		2: "PLUGIN_STATUS_INSTALLED",
		3: "PLUGIN_STATUS_ACTIVE",
		4: "PLUGIN_STATUS_INACTIVE",
		5: "PLUGIN_STATUS_ERROR",
		6: "PLUGIN_STATUS_UPDATING",
	}
	PluginStatus_value = map[string]int32{
		"PLUGIN_STATUS_UNSPECIFIED": 0,
		"PLUGIN_STATUS_AVAILABLE":   1,
		"PLUGIN_STATUS_INSTALLED":   2,
		"PLUGIN_STATUS_ACTIVE":      3,
		"PLUGIN_STATUS_INACTIVE":    4,
		"PLUGIN_STATUS_ERROR":       5,
		"PLUGIN_STATUS_UPDATING":    6,
	}
)

func (x PluginStatus) Enum() *PluginStatus {
	p := new(PluginStatus)
	*p = x
	return p
}

func (x PluginStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PluginStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_pulumicost_v1_registry_proto_enumTypes[1].Descriptor()
}

func (PluginStatus) Type() protoreflect.EnumType {
	return &file_pulumicost_v1_registry_proto_enumTypes[1]
}

func (x PluginStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PluginStatus.Descriptor instead.
func (PluginStatus) EnumDescriptor() ([]byte, []int) {
	return file_pulumicost_v1_registry_proto_rawDescGZIP(), []int{1}
}

// SecurityLevel defines plugin security trust levels.
type SecurityLevel int32

const (
	SecurityLevel_SECURITY_LEVEL_UNSPECIFIED SecurityLevel = 0
	SecurityLevel_SECURITY_LEVEL_UNTRUSTED   SecurityLevel = 1 // Untrusted, requires explicit approval
	SecurityLevel_SECURITY_LEVEL_COMMUNITY   SecurityLevel = 2 // Community verified
	SecurityLevel_SECURITY_LEVEL_VERIFIED    SecurityLevel = 3 // Officially verified
	SecurityLevel_SECURITY_LEVEL_OFFICIAL    SecurityLevel = 4 // Official PulumiCost plugin
)

// Enum value maps for SecurityLevel.
var (
	SecurityLevel_name = map[int32]string{
		0: "SECURITY_LEVEL_UNSPECIFIED",
		1: "SECURITY_LEVEL_UNTRUSTED",
		2: "SECURITY_LEVEL_COMMUNITY",
		3: "SECURITY_LEVEL_VERIFIED",
		4: "SECURITY_LEVEL_OFFICIAL",
	}
	SecurityLevel_value = map[string]int32{
		"SECURITY_LEVEL_UNSPECIFIED": 0,
		"SECURITY_LEVEL_UNTRUSTED":   1,
		"SECURITY_LEVEL_COMMUNITY":   2,
		"SECURITY_LEVEL_VERIFIED":    3,
		"SECURITY_LEVEL_OFFICIAL":    4,
	}
)

func (x SecurityLevel) Enum() *SecurityLevel {
	p := new(SecurityLevel)
	*p = x
	return p
}

func (x SecurityLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SecurityLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_pulumicost_v1_registry_proto_enumTypes[2].Descriptor()
}

func (SecurityLevel) Type() protoreflect.EnumType {
	return &file_pulumicost_v1_registry_proto_enumTypes[2]
}

func (x SecurityLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SecurityLevel.Descriptor instead.
func (SecurityLevel) EnumDescriptor() ([]byte, []int) {
	return file_pulumicost_v1_registry_proto_rawDescGZIP(), []int{2}
}

// InstallationMethod defines how to install the plugin.
type InstallationMethod int32

const (
	InstallationMethod_INSTALLATION_METHOD_UNSPECIFIED InstallationMethod = 0
	InstallationMethod_INSTALLATION_METHOD_BINARY      InstallationMethod = 1 // Direct binary download
	InstallationMethod_INSTALLATION_METHOD_CONTAINER   InstallationMethod = 2 // Container image
	InstallationMethod_INSTALLATION_METHOD_SCRIPT      InstallationMethod = 3 // Installation script
	InstallationMethod_INSTALLATION_METHOD_PACKAGE     InstallationMethod = 4 // System package manager
)

// Enum value maps for InstallationMethod.
var (
	InstallationMethod_name = map[int32]string{
		0: "INSTALLATION_METHOD_UNSPECIFIED",
		1: "INSTALLATION_METHOD_BINARY",
		2: "INSTALLATION_METHOD_CONTAINER",
		3: "INSTALLATION_METHOD_SCRIPT",
		4: "INSTALLATION_METHOD_PACKAGE",
	}
	InstallationMethod_value = map[string]int32{
		"INSTALLATION_METHOD_UNSPECIFIED": 0,
		"INSTALLATION_METHOD_BINARY":      1,
		"INSTALLATION_METHOD_CONTAINER":   2,
		"INSTALLATION_METHOD_SCRIPT":      3,
		"INSTALLATION_METHOD_PACKAGE":     4,
	}
)

func (x InstallationMethod) Enum() *InstallationMethod {
	p := new(InstallationMethod)
	*p = x
	return p
}

func (x InstallationMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InstallationMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_pulumicost_v1_registry_proto_enumTypes[3].Descriptor()
}

func (InstallationMethod) Type() protoreflect.EnumType {
	return &file_pulumicost_v1_registry_proto_enumTypes[3]
}

func (x InstallationMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InstallationMethod.Descriptor instead.
func (InstallationMethod) EnumDescriptor() ([]byte, []int) {
	return file_pulumicost_v1_registry_proto_rawDescGZIP(), []int{3}
}

// ErrorSeverity defines validation error severity levels.
type ErrorSeverity int32

const (
	ErrorSeverity_ERROR_SEVERITY_UNSPECIFIED ErrorSeverity = 0
	ErrorSeverity_ERROR_SEVERITY_INFO        ErrorSeverity = 1
	ErrorSeverity_ERROR_SEVERITY_WARNING     ErrorSeverity = 2
	ErrorSeverity_ERROR_SEVERITY_ERROR       ErrorSeverity = 3
	ErrorSeverity_ERROR_SEVERITY_CRITICAL    ErrorSeverity = 4
)

// Enum value maps for ErrorSeverity.
var (
	ErrorSeverity_name = map[int32]string{
		0: "ERROR_SEVERITY_UNSPECIFIED",
		1: "ERROR_SEVERITY_INFO",
		2: "ERROR_SEVERITY_WARNING",
		3: "ERROR_SEVERITY_ERROR",
		4: "ERROR_SEVERITY_CRITICAL",
	}
	ErrorSeverity_value = map[string]int32{
		"ERROR_SEVERITY_UNSPECIFIED": 0,
		"ERROR_SEVERITY_INFO":        1,
		"ERROR_SEVERITY_WARNING":     2,
		"ERROR_SEVERITY_ERROR":       3,
		"ERROR_SEVERITY_CRITICAL":    4,
	}
)

func (x ErrorSeverity) Enum() *ErrorSeverity {
	p := new(ErrorSeverity)
	*p = x
	return p
}

func (x ErrorSeverity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorSeverity) Descriptor() protoreflect.EnumDescriptor {
	return file_pulumicost_v1_registry_proto_enumTypes[4].Descriptor()
}

func (ErrorSeverity) Type() protoreflect.EnumType {
	return &file_pulumicost_v1_registry_proto_enumTypes[4]
}

func (x ErrorSeverity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorSeverity.Descriptor instead.
func (ErrorSeverity) EnumDescriptor() ([]byte, []int) {
	return file_pulumicost_v1_registry_proto_rawDescGZIP(), []int{4}
}

// DiscoverPluginsRequest contains parameters for plugin discovery.
type DiscoverPluginsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// sources specifies which discovery sources to search (empty for all configured)
	Sources []DiscoverySource `protobuf:"varint,1,rep,packed,name=sources,proto3,enum=pulumicost.v1.DiscoverySource" json:"sources,omitempty"`
	// filter optionally filters results by plugin name pattern
	Filter string `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	// include_installed includes already installed plugins in results
	IncludeInstalled bool `protobuf:"varint,3,opt,name=include_installed,json=includeInstalled,proto3" json:"include_installed,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DiscoverPluginsRequest) Reset() {
	*x = DiscoverPluginsRequest{}
	mi := &file_pulumicost_v1_registry_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiscoverPluginsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoverPluginsRequest) ProtoMessage() {}

func (x *DiscoverPluginsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_registry_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoverPluginsRequest.ProtoReflect.Descriptor instead.
func (*DiscoverPluginsRequest) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_registry_proto_rawDescGZIP(), []int{0}
}

func (x *DiscoverPluginsRequest) GetSources() []DiscoverySource {
	if x != nil {
		return x.Sources
	}
	return nil
}

func (x *DiscoverPluginsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *DiscoverPluginsRequest) GetIncludeInstalled() bool {
	if x != nil {
		return x.IncludeInstalled
	}
	return false
}

// DiscoverPluginsResponse contains discovered plugin information.
type DiscoverPluginsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// plugins contains the list of discovered plugins
	Plugins []*PluginInfo `protobuf:"bytes,1,rep,name=plugins,proto3" json:"plugins,omitempty"`
	// discovery_errors contains any errors encountered during discovery
	DiscoveryErrors []*DiscoveryError `protobuf:"bytes,2,rep,name=discovery_errors,json=discoveryErrors,proto3" json:"discovery_errors,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DiscoverPluginsResponse) Reset() {
	*x = DiscoverPluginsResponse{}
	mi := &file_pulumicost_v1_registry_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiscoverPluginsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoverPluginsResponse) ProtoMessage() {}

func (x *DiscoverPluginsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_registry_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoverPluginsResponse.ProtoReflect.Descriptor instead.
func (*DiscoverPluginsResponse) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_registry_proto_rawDescGZIP(), []int{1}
}

func (x *DiscoverPluginsResponse) GetPlugins() []*PluginInfo {
	if x != nil {
		return x.Plugins
	}
	return nil
}

func (x *DiscoverPluginsResponse) GetDiscoveryErrors() []*DiscoveryError {
	if x != nil {
		return x.DiscoveryErrors
	}
	return nil
}

// PluginInfo provides information about a discovered or installed plugin.
type PluginInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// name is the unique plugin name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// version is the plugin version (semantic versioning)
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// description provides a human-readable description
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// author identifies the plugin author/organization
	Author string `protobuf:"bytes,4,opt,name=author,proto3" json:"author,omitempty"`
	// source indicates where the plugin was discovered
	Source DiscoverySource `protobuf:"varint,5,opt,name=source,proto3,enum=pulumicost.v1.DiscoverySource" json:"source,omitempty"`
	// location provides the plugin location (path, URL, etc.)
	Location string `protobuf:"bytes,6,opt,name=location,proto3" json:"location,omitempty"`
	// status indicates the current plugin status
	Status PluginStatus `protobuf:"varint,7,opt,name=status,proto3,enum=pulumicost.v1.PluginStatus" json:"status,omitempty"`
	// security_level indicates the plugin security trust level
	SecurityLevel SecurityLevel `protobuf:"varint,8,opt,name=security_level,json=securityLevel,proto3,enum=pulumicost.v1.SecurityLevel" json:"security_level,omitempty"`
	// capabilities lists the plugin's supported capabilities
	Capabilities []string `protobuf:"bytes,9,rep,name=capabilities,proto3" json:"capabilities,omitempty"`
	// requirements lists the plugin's system requirements
	Requirements *PluginRequirements `protobuf:"bytes,10,opt,name=requirements,proto3" json:"requirements,omitempty"`
	// manifest_hash provides integrity verification
	ManifestHash string `protobuf:"bytes,11,opt,name=manifest_hash,json=manifestHash,proto3" json:"manifest_hash,omitempty"`
	// last_updated indicates when the plugin was last updated
	LastUpdated   *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PluginInfo) Reset() {
	*x = PluginInfo{}
	mi := &file_pulumicost_v1_registry_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginInfo) ProtoMessage() {}

func (x *PluginInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_registry_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginInfo.ProtoReflect.Descriptor instead.
func (*PluginInfo) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_registry_proto_rawDescGZIP(), []int{2}
}

func (x *PluginInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PluginInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *PluginInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PluginInfo) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *PluginInfo) GetSource() DiscoverySource {
	if x != nil {
		return x.Source
	}
	return DiscoverySource_DISCOVERY_SOURCE_UNSPECIFIED
}

func (x *PluginInfo) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *PluginInfo) GetStatus() PluginStatus {
	if x != nil {
		return x.Status
	}
	return PluginStatus_PLUGIN_STATUS_UNSPECIFIED
}

func (x *PluginInfo) GetSecurityLevel() SecurityLevel {
	if x != nil {
		return x.SecurityLevel
	}
	return SecurityLevel_SECURITY_LEVEL_UNSPECIFIED
}

func (x *PluginInfo) GetCapabilities() []string {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *PluginInfo) GetRequirements() *PluginRequirements {
	if x != nil {
		return x.Requirements
	}
	return nil
}

func (x *PluginInfo) GetManifestHash() string {
	if x != nil {
		return x.ManifestHash
	}
	return ""
}

func (x *PluginInfo) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

// PluginRequirements specifies plugin system and dependency requirements.
type PluginRequirements struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// min_spec_version is the minimum required spec version (e.g., "0.1.0")
	MinSpecVersion string `protobuf:"bytes,1,opt,name=min_spec_version,json=minSpecVersion,proto3" json:"min_spec_version,omitempty"`
	// max_spec_version is the maximum supported spec version
	MaxSpecVersion string `protobuf:"bytes,2,opt,name=max_spec_version,json=maxSpecVersion,proto3" json:"max_spec_version,omitempty"`
	// dependencies lists required plugin dependencies
	Dependencies []*PluginDependency `protobuf:"bytes,3,rep,name=dependencies,proto3" json:"dependencies,omitempty"`
	// system_requirements specifies system-level requirements
	SystemRequirements *SystemRequirements `protobuf:"bytes,4,opt,name=system_requirements,json=systemRequirements,proto3" json:"system_requirements,omitempty"`
	// runtime_requirements specifies runtime requirements
	RuntimeRequirements *RuntimeRequirements `protobuf:"bytes,5,opt,name=runtime_requirements,json=runtimeRequirements,proto3" json:"runtime_requirements,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *PluginRequirements) Reset() {
	*x = PluginRequirements{}
	mi := &file_pulumicost_v1_registry_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginRequirements) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginRequirements) ProtoMessage() {}

func (x *PluginRequirements) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_registry_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginRequirements.ProtoReflect.Descriptor instead.
func (*PluginRequirements) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_registry_proto_rawDescGZIP(), []int{3}
}

func (x *PluginRequirements) GetMinSpecVersion() string {
	if x != nil {
		return x.MinSpecVersion
	}
	return ""
}

func (x *PluginRequirements) GetMaxSpecVersion() string {
	if x != nil {
		return x.MaxSpecVersion
	}
	return ""
}

func (x *PluginRequirements) GetDependencies() []*PluginDependency {
	if x != nil {
		return x.Dependencies
	}
	return nil
}

func (x *PluginRequirements) GetSystemRequirements() *SystemRequirements {
	if x != nil {
		return x.SystemRequirements
	}
	return nil
}

func (x *PluginRequirements) GetRuntimeRequirements() *RuntimeRequirements {
	if x != nil {
		return x.RuntimeRequirements
	}
	return nil
}

// PluginDependency represents a dependency on another plugin.
type PluginDependency struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// name of the required plugin
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// version_constraint specifies the version requirement (e.g., ">=1.0.0,<2.0.0")
	VersionConstraint string `protobuf:"bytes,2,opt,name=version_constraint,json=versionConstraint,proto3" json:"version_constraint,omitempty"`
	// optional indicates if the dependency is optional
	Optional      bool `protobuf:"varint,3,opt,name=optional,proto3" json:"optional,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PluginDependency) Reset() {
	*x = PluginDependency{}
	mi := &file_pulumicost_v1_registry_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginDependency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginDependency) ProtoMessage() {}

func (x *PluginDependency) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_registry_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginDependency.ProtoReflect.Descriptor instead.
func (*PluginDependency) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_registry_proto_rawDescGZIP(), []int{4}
}

func (x *PluginDependency) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PluginDependency) GetVersionConstraint() string {
	if x != nil {
		return x.VersionConstraint
	}
	return ""
}

func (x *PluginDependency) GetOptional() bool {
	if x != nil {
		return x.Optional
	}
	return false
}

// SystemRequirements specifies system-level requirements.
type SystemRequirements struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// min_memory_mb specifies minimum memory requirement in MB
	MinMemoryMb int64 `protobuf:"varint,1,opt,name=min_memory_mb,json=minMemoryMb,proto3" json:"min_memory_mb,omitempty"`
	// min_disk_mb specifies minimum disk space requirement in MB
	MinDiskMb int64 `protobuf:"varint,2,opt,name=min_disk_mb,json=minDiskMb,proto3" json:"min_disk_mb,omitempty"`
	// supported_architectures lists supported CPU architectures
	SupportedArchitectures []string `protobuf:"bytes,3,rep,name=supported_architectures,json=supportedArchitectures,proto3" json:"supported_architectures,omitempty"`
	// supported_os lists supported operating systems
	SupportedOs   []string `protobuf:"bytes,4,rep,name=supported_os,json=supportedOs,proto3" json:"supported_os,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemRequirements) Reset() {
	*x = SystemRequirements{}
	mi := &file_pulumicost_v1_registry_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemRequirements) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemRequirements) ProtoMessage() {}

func (x *SystemRequirements) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_registry_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemRequirements.ProtoReflect.Descriptor instead.
func (*SystemRequirements) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_registry_proto_rawDescGZIP(), []int{5}
}

func (x *SystemRequirements) GetMinMemoryMb() int64 {
	if x != nil {
		return x.MinMemoryMb
	}
	return 0
}

func (x *SystemRequirements) GetMinDiskMb() int64 {
	if x != nil {
		return x.MinDiskMb
	}
	return 0
}

func (x *SystemRequirements) GetSupportedArchitectures() []string {
	if x != nil {
		return x.SupportedArchitectures
	}
	return nil
}

func (x *SystemRequirements) GetSupportedOs() []string {
	if x != nil {
		return x.SupportedOs
	}
	return nil
}

// RuntimeRequirements specifies runtime environment requirements.
type RuntimeRequirements struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// grpc_version specifies required gRPC version
	GrpcVersion string `protobuf:"bytes,1,opt,name=grpc_version,json=grpcVersion,proto3" json:"grpc_version,omitempty"`
	// tls_required indicates if TLS is required
	TlsRequired bool `protobuf:"varint,2,opt,name=tls_required,json=tlsRequired,proto3" json:"tls_required,omitempty"`
	// auth_methods lists supported authentication methods
	AuthMethods []string `protobuf:"bytes,3,rep,name=auth_methods,json=authMethods,proto3" json:"auth_methods,omitempty"`
	// timeout_seconds specifies the plugin response timeout
	TimeoutSeconds int32 `protobuf:"varint,4,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RuntimeRequirements) Reset() {
	*x = RuntimeRequirements{}
	mi := &file_pulumicost_v1_registry_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuntimeRequirements) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeRequirements) ProtoMessage() {}

func (x *RuntimeRequirements) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_registry_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeRequirements.ProtoReflect.Descriptor instead.
func (*RuntimeRequirements) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_registry_proto_rawDescGZIP(), []int{6}
}

func (x *RuntimeRequirements) GetGrpcVersion() string {
	if x != nil {
		return x.GrpcVersion
	}
	return ""
}

func (x *RuntimeRequirements) GetTlsRequired() bool {
	if x != nil {
		return x.TlsRequired
	}
	return false
}

func (x *RuntimeRequirements) GetAuthMethods() []string {
	if x != nil {
		return x.AuthMethods
	}
	return nil
}

func (x *RuntimeRequirements) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

// GetPluginManifestRequest requests a plugin's manifest.
type GetPluginManifestRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// name of the plugin
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// version of the plugin (empty for latest)
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// source specifies where to retrieve the manifest
	Source DiscoverySource `protobuf:"varint,3,opt,name=source,proto3,enum=pulumicost.v1.DiscoverySource" json:"source,omitempty"`
	// location provides the plugin location
	Location      string `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPluginManifestRequest) Reset() {
	*x = GetPluginManifestRequest{}
	mi := &file_pulumicost_v1_registry_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPluginManifestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPluginManifestRequest) ProtoMessage() {}

func (x *GetPluginManifestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_registry_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPluginManifestRequest.ProtoReflect.Descriptor instead.
func (*GetPluginManifestRequest) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_registry_proto_rawDescGZIP(), []int{7}
}

func (x *GetPluginManifestRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetPluginManifestRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GetPluginManifestRequest) GetSource() DiscoverySource {
	if x != nil {
		return x.Source
	}
	return DiscoverySource_DISCOVERY_SOURCE_UNSPECIFIED
}

func (x *GetPluginManifestRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

// GetPluginManifestResponse contains the plugin manifest.
type GetPluginManifestResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// manifest contains the complete plugin manifest
	Manifest      *PluginManifest `protobuf:"bytes,1,opt,name=manifest,proto3" json:"manifest,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPluginManifestResponse) Reset() {
	*x = GetPluginManifestResponse{}
	mi := &file_pulumicost_v1_registry_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPluginManifestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPluginManifestResponse) ProtoMessage() {}

func (x *GetPluginManifestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_registry_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPluginManifestResponse.ProtoReflect.Descriptor instead.
func (*GetPluginManifestResponse) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_registry_proto_rawDescGZIP(), []int{8}
}

func (x *GetPluginManifestResponse) GetManifest() *PluginManifest {
	if x != nil {
		return x.Manifest
	}
	return nil
}

// PluginManifest defines the complete plugin specification.
type PluginManifest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// metadata contains basic plugin information
	Metadata *PluginMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// specification defines plugin capabilities and interface
	Specification *PluginSpecification `protobuf:"bytes,2,opt,name=specification,proto3" json:"specification,omitempty"`
	// security contains security-related information
	Security *PluginSecurity `protobuf:"bytes,3,opt,name=security,proto3" json:"security,omitempty"`
	// installation provides installation instructions
	Installation *InstallationSpec `protobuf:"bytes,4,opt,name=installation,proto3" json:"installation,omitempty"`
	// configuration defines plugin configuration schema
	Configuration *ConfigurationSpec `protobuf:"bytes,5,opt,name=configuration,proto3" json:"configuration,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PluginManifest) Reset() {
	*x = PluginManifest{}
	mi := &file_pulumicost_v1_registry_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginManifest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginManifest) ProtoMessage() {}

func (x *PluginManifest) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_registry_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginManifest.ProtoReflect.Descriptor instead.
func (*PluginManifest) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_registry_proto_rawDescGZIP(), []int{9}
}

func (x *PluginManifest) GetMetadata() *PluginMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *PluginManifest) GetSpecification() *PluginSpecification {
	if x != nil {
		return x.Specification
	}
	return nil
}

func (x *PluginManifest) GetSecurity() *PluginSecurity {
	if x != nil {
		return x.Security
	}
	return nil
}

func (x *PluginManifest) GetInstallation() *InstallationSpec {
	if x != nil {
		return x.Installation
	}
	return nil
}

func (x *PluginManifest) GetConfiguration() *ConfigurationSpec {
	if x != nil {
		return x.Configuration
	}
	return nil
}

// PluginMetadata contains basic plugin information.
type PluginMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// name is the unique plugin identifier
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// version follows semantic versioning (e.g., "1.0.0")
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// description provides a human-readable description
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// author identifies the plugin author/organization
	Author string `protobuf:"bytes,4,opt,name=author,proto3" json:"author,omitempty"`
	// homepage provides the plugin's homepage URL
	Homepage string `protobuf:"bytes,5,opt,name=homepage,proto3" json:"homepage,omitempty"`
	// repository provides the source code repository URL
	Repository string `protobuf:"bytes,6,opt,name=repository,proto3" json:"repository,omitempty"`
	// license specifies the plugin license (e.g., "Apache-2.0")
	License string `protobuf:"bytes,7,opt,name=license,proto3" json:"license,omitempty"`
	// keywords provides searchable keywords
	Keywords []string `protobuf:"bytes,8,rep,name=keywords,proto3" json:"keywords,omitempty"`
	// created_at indicates when the plugin was created
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// updated_at indicates when the plugin was last updated
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PluginMetadata) Reset() {
	*x = PluginMetadata{}
	mi := &file_pulumicost_v1_registry_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginMetadata) ProtoMessage() {}

func (x *PluginMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_registry_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginMetadata.ProtoReflect.Descriptor instead.
func (*PluginMetadata) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_registry_proto_rawDescGZIP(), []int{10}
}

func (x *PluginMetadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PluginMetadata) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *PluginMetadata) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PluginMetadata) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *PluginMetadata) GetHomepage() string {
	if x != nil {
		return x.Homepage
	}
	return ""
}

func (x *PluginMetadata) GetRepository() string {
	if x != nil {
		return x.Repository
	}
	return ""
}

func (x *PluginMetadata) GetLicense() string {
	if x != nil {
		return x.License
	}
	return ""
}

func (x *PluginMetadata) GetKeywords() []string {
	if x != nil {
		return x.Keywords
	}
	return nil
}

func (x *PluginMetadata) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *PluginMetadata) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// PluginSpecification defines plugin capabilities and interface compliance.
type PluginSpecification struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// spec_version indicates the PulumiCost spec version supported
	SpecVersion string `protobuf:"bytes,1,opt,name=spec_version,json=specVersion,proto3" json:"spec_version,omitempty"`
	// supported_providers lists supported cloud providers
	SupportedProviders []string `protobuf:"bytes,2,rep,name=supported_providers,json=supportedProviders,proto3" json:"supported_providers,omitempty"`
	// supported_resources lists supported resource types per provider
	SupportedResources map[string]*ProviderResources `protobuf:"bytes,3,rep,name=supported_resources,json=supportedResources,proto3" json:"supported_resources,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// capabilities lists plugin-specific capabilities
	Capabilities []string `protobuf:"bytes,4,rep,name=capabilities,proto3" json:"capabilities,omitempty"`
	// service_definition defines the gRPC service interface
	ServiceDefinition *ServiceDefinition `protobuf:"bytes,5,opt,name=service_definition,json=serviceDefinition,proto3" json:"service_definition,omitempty"`
	// observability_support indicates observability features
	ObservabilitySupport *ObservabilitySupport `protobuf:"bytes,6,opt,name=observability_support,json=observabilitySupport,proto3" json:"observability_support,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *PluginSpecification) Reset() {
	*x = PluginSpecification{}
	mi := &file_pulumicost_v1_registry_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginSpecification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginSpecification) ProtoMessage() {}

func (x *PluginSpecification) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_registry_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginSpecification.ProtoReflect.Descriptor instead.
func (*PluginSpecification) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_registry_proto_rawDescGZIP(), []int{11}
}

func (x *PluginSpecification) GetSpecVersion() string {
	if x != nil {
		return x.SpecVersion
	}
	return ""
}

func (x *PluginSpecification) GetSupportedProviders() []string {
	if x != nil {
		return x.SupportedProviders
	}
	return nil
}

func (x *PluginSpecification) GetSupportedResources() map[string]*ProviderResources {
	if x != nil {
		return x.SupportedResources
	}
	return nil
}

func (x *PluginSpecification) GetCapabilities() []string {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *PluginSpecification) GetServiceDefinition() *ServiceDefinition {
	if x != nil {
		return x.ServiceDefinition
	}
	return nil
}

func (x *PluginSpecification) GetObservabilitySupport() *ObservabilitySupport {
	if x != nil {
		return x.ObservabilitySupport
	}
	return nil
}

// ProviderResources lists resources supported by a provider.
type ProviderResources struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// resource_types lists supported resource types
	ResourceTypes []string `protobuf:"bytes,1,rep,name=resource_types,json=resourceTypes,proto3" json:"resource_types,omitempty"`
	// billing_modes lists supported billing modes
	BillingModes []string `protobuf:"bytes,2,rep,name=billing_modes,json=billingModes,proto3" json:"billing_modes,omitempty"`
	// regions lists supported regions
	Regions       []string `protobuf:"bytes,3,rep,name=regions,proto3" json:"regions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProviderResources) Reset() {
	*x = ProviderResources{}
	mi := &file_pulumicost_v1_registry_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProviderResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProviderResources) ProtoMessage() {}

func (x *ProviderResources) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_registry_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProviderResources.ProtoReflect.Descriptor instead.
func (*ProviderResources) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_registry_proto_rawDescGZIP(), []int{12}
}

func (x *ProviderResources) GetResourceTypes() []string {
	if x != nil {
		return x.ResourceTypes
	}
	return nil
}

func (x *ProviderResources) GetBillingModes() []string {
	if x != nil {
		return x.BillingModes
	}
	return nil
}

func (x *ProviderResources) GetRegions() []string {
	if x != nil {
		return x.Regions
	}
	return nil
}

// ServiceDefinition defines the plugin's gRPC service interface.
type ServiceDefinition struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// service_name is the gRPC service name
	ServiceName string `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	// package_name is the protobuf package name
	PackageName string `protobuf:"bytes,2,opt,name=package_name,json=packageName,proto3" json:"package_name,omitempty"`
	// methods lists the implemented RPC methods
	Methods []string `protobuf:"bytes,3,rep,name=methods,proto3" json:"methods,omitempty"`
	// port specifies the default service port
	Port int32 `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	// health_check_path provides health check endpoint
	HealthCheckPath string `protobuf:"bytes,5,opt,name=health_check_path,json=healthCheckPath,proto3" json:"health_check_path,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ServiceDefinition) Reset() {
	*x = ServiceDefinition{}
	mi := &file_pulumicost_v1_registry_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceDefinition) ProtoMessage() {}

func (x *ServiceDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_registry_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceDefinition.ProtoReflect.Descriptor instead.
func (*ServiceDefinition) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_registry_proto_rawDescGZIP(), []int{13}
}

func (x *ServiceDefinition) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *ServiceDefinition) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *ServiceDefinition) GetMethods() []string {
	if x != nil {
		return x.Methods
	}
	return nil
}

func (x *ServiceDefinition) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ServiceDefinition) GetHealthCheckPath() string {
	if x != nil {
		return x.HealthCheckPath
	}
	return ""
}

// ObservabilitySupport defines plugin observability capabilities.
type ObservabilitySupport struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// metrics_enabled indicates if metrics are supported
	MetricsEnabled bool `protobuf:"varint,1,opt,name=metrics_enabled,json=metricsEnabled,proto3" json:"metrics_enabled,omitempty"`
	// tracing_enabled indicates if distributed tracing is supported
	TracingEnabled bool `protobuf:"varint,2,opt,name=tracing_enabled,json=tracingEnabled,proto3" json:"tracing_enabled,omitempty"`
	// logging_enabled indicates if structured logging is supported
	LoggingEnabled bool `protobuf:"varint,3,opt,name=logging_enabled,json=loggingEnabled,proto3" json:"logging_enabled,omitempty"`
	// health_checks_enabled indicates if health checks are supported
	HealthChecksEnabled bool `protobuf:"varint,4,opt,name=health_checks_enabled,json=healthChecksEnabled,proto3" json:"health_checks_enabled,omitempty"`
	// sli_support indicates if SLI reporting is supported
	SliSupport    bool `protobuf:"varint,5,opt,name=sli_support,json=sliSupport,proto3" json:"sli_support,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ObservabilitySupport) Reset() {
	*x = ObservabilitySupport{}
	mi := &file_pulumicost_v1_registry_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ObservabilitySupport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObservabilitySupport) ProtoMessage() {}

func (x *ObservabilitySupport) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_registry_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObservabilitySupport.ProtoReflect.Descriptor instead.
func (*ObservabilitySupport) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_registry_proto_rawDescGZIP(), []int{14}
}

func (x *ObservabilitySupport) GetMetricsEnabled() bool {
	if x != nil {
		return x.MetricsEnabled
	}
	return false
}

func (x *ObservabilitySupport) GetTracingEnabled() bool {
	if x != nil {
		return x.TracingEnabled
	}
	return false
}

func (x *ObservabilitySupport) GetLoggingEnabled() bool {
	if x != nil {
		return x.LoggingEnabled
	}
	return false
}

func (x *ObservabilitySupport) GetHealthChecksEnabled() bool {
	if x != nil {
		return x.HealthChecksEnabled
	}
	return false
}

func (x *ObservabilitySupport) GetSliSupport() bool {
	if x != nil {
		return x.SliSupport
	}
	return false
}

// PluginSecurity contains security-related information.
type PluginSecurity struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// signature provides plugin signature for verification
	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	// public_key provides the signing public key
	PublicKey string `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	// certificate_chain provides certificate chain for verification
	CertificateChain []string `protobuf:"bytes,3,rep,name=certificate_chain,json=certificateChain,proto3" json:"certificate_chain,omitempty"`
	// security_level indicates the plugin trust level
	SecurityLevel SecurityLevel `protobuf:"varint,4,opt,name=security_level,json=securityLevel,proto3,enum=pulumicost.v1.SecurityLevel" json:"security_level,omitempty"`
	// permissions lists required system permissions
	Permissions []string `protobuf:"bytes,5,rep,name=permissions,proto3" json:"permissions,omitempty"`
	// sandbox_required indicates if sandboxing is required
	SandboxRequired bool `protobuf:"varint,6,opt,name=sandbox_required,json=sandboxRequired,proto3" json:"sandbox_required,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PluginSecurity) Reset() {
	*x = PluginSecurity{}
	mi := &file_pulumicost_v1_registry_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginSecurity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginSecurity) ProtoMessage() {}

func (x *PluginSecurity) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_registry_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginSecurity.ProtoReflect.Descriptor instead.
func (*PluginSecurity) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_registry_proto_rawDescGZIP(), []int{15}
}

func (x *PluginSecurity) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *PluginSecurity) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *PluginSecurity) GetCertificateChain() []string {
	if x != nil {
		return x.CertificateChain
	}
	return nil
}

func (x *PluginSecurity) GetSecurityLevel() SecurityLevel {
	if x != nil {
		return x.SecurityLevel
	}
	return SecurityLevel_SECURITY_LEVEL_UNSPECIFIED
}

func (x *PluginSecurity) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *PluginSecurity) GetSandboxRequired() bool {
	if x != nil {
		return x.SandboxRequired
	}
	return false
}

// InstallationSpec provides plugin installation instructions.
type InstallationSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// installation_method specifies how to install the plugin
	InstallationMethod InstallationMethod `protobuf:"varint,1,opt,name=installation_method,json=installationMethod,proto3,enum=pulumicost.v1.InstallationMethod" json:"installation_method,omitempty"`
	// download_url provides the plugin download URL
	DownloadUrl string `protobuf:"bytes,2,opt,name=download_url,json=downloadUrl,proto3" json:"download_url,omitempty"`
	// checksum provides file integrity verification
	Checksum string `protobuf:"bytes,3,opt,name=checksum,proto3" json:"checksum,omitempty"`
	// checksum_algorithm specifies the checksum algorithm (e.g., "sha256")
	ChecksumAlgorithm string `protobuf:"bytes,4,opt,name=checksum_algorithm,json=checksumAlgorithm,proto3" json:"checksum_algorithm,omitempty"`
	// install_script provides installation script
	InstallScript string `protobuf:"bytes,5,opt,name=install_script,json=installScript,proto3" json:"install_script,omitempty"`
	// pre_install_checks lists checks to run before installation
	PreInstallChecks []string `protobuf:"bytes,6,rep,name=pre_install_checks,json=preInstallChecks,proto3" json:"pre_install_checks,omitempty"`
	// post_install_steps lists steps to run after installation
	PostInstallSteps []string `protobuf:"bytes,7,rep,name=post_install_steps,json=postInstallSteps,proto3" json:"post_install_steps,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *InstallationSpec) Reset() {
	*x = InstallationSpec{}
	mi := &file_pulumicost_v1_registry_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallationSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallationSpec) ProtoMessage() {}

func (x *InstallationSpec) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_registry_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallationSpec.ProtoReflect.Descriptor instead.
func (*InstallationSpec) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_registry_proto_rawDescGZIP(), []int{16}
}

func (x *InstallationSpec) GetInstallationMethod() InstallationMethod {
	if x != nil {
		return x.InstallationMethod
	}
	return InstallationMethod_INSTALLATION_METHOD_UNSPECIFIED
}

func (x *InstallationSpec) GetDownloadUrl() string {
	if x != nil {
		return x.DownloadUrl
	}
	return ""
}

func (x *InstallationSpec) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

func (x *InstallationSpec) GetChecksumAlgorithm() string {
	if x != nil {
		return x.ChecksumAlgorithm
	}
	return ""
}

func (x *InstallationSpec) GetInstallScript() string {
	if x != nil {
		return x.InstallScript
	}
	return ""
}

func (x *InstallationSpec) GetPreInstallChecks() []string {
	if x != nil {
		return x.PreInstallChecks
	}
	return nil
}

func (x *InstallationSpec) GetPostInstallSteps() []string {
	if x != nil {
		return x.PostInstallSteps
	}
	return nil
}

// ConfigurationSpec defines plugin configuration schema.
type ConfigurationSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// schema provides JSON schema for configuration validation
	Schema string `protobuf:"bytes,1,opt,name=schema,proto3" json:"schema,omitempty"`
	// default_config provides default configuration values
	DefaultConfig string `protobuf:"bytes,2,opt,name=default_config,json=defaultConfig,proto3" json:"default_config,omitempty"`
	// required_fields lists required configuration fields
	RequiredFields []string `protobuf:"bytes,3,rep,name=required_fields,json=requiredFields,proto3" json:"required_fields,omitempty"`
	// examples provides configuration examples
	Examples      []*ConfigurationExample `protobuf:"bytes,4,rep,name=examples,proto3" json:"examples,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigurationSpec) Reset() {
	*x = ConfigurationSpec{}
	mi := &file_pulumicost_v1_registry_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigurationSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurationSpec) ProtoMessage() {}

func (x *ConfigurationSpec) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_registry_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigurationSpec.ProtoReflect.Descriptor instead.
func (*ConfigurationSpec) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_registry_proto_rawDescGZIP(), []int{17}
}

func (x *ConfigurationSpec) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

func (x *ConfigurationSpec) GetDefaultConfig() string {
	if x != nil {
		return x.DefaultConfig
	}
	return ""
}

func (x *ConfigurationSpec) GetRequiredFields() []string {
	if x != nil {
		return x.RequiredFields
	}
	return nil
}

func (x *ConfigurationSpec) GetExamples() []*ConfigurationExample {
	if x != nil {
		return x.Examples
	}
	return nil
}

// ConfigurationExample provides a configuration example.
type ConfigurationExample struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// name of the configuration example
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// description of the configuration scenario
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// config provides the example configuration
	Config        string `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigurationExample) Reset() {
	*x = ConfigurationExample{}
	mi := &file_pulumicost_v1_registry_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigurationExample) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurationExample) ProtoMessage() {}

func (x *ConfigurationExample) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_registry_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigurationExample.ProtoReflect.Descriptor instead.
func (*ConfigurationExample) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_registry_proto_rawDescGZIP(), []int{18}
}

func (x *ConfigurationExample) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConfigurationExample) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ConfigurationExample) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

// ValidatePluginRequest requests plugin validation.
type ValidatePluginRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// manifest contains the plugin manifest to validate
	Manifest *PluginManifest `protobuf:"bytes,1,opt,name=manifest,proto3" json:"manifest,omitempty"`
	// check_dependencies indicates whether to validate dependencies
	CheckDependencies bool `protobuf:"varint,2,opt,name=check_dependencies,json=checkDependencies,proto3" json:"check_dependencies,omitempty"`
	// check_system_requirements indicates whether to validate system requirements
	CheckSystemRequirements bool `protobuf:"varint,3,opt,name=check_system_requirements,json=checkSystemRequirements,proto3" json:"check_system_requirements,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ValidatePluginRequest) Reset() {
	*x = ValidatePluginRequest{}
	mi := &file_pulumicost_v1_registry_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidatePluginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatePluginRequest) ProtoMessage() {}

func (x *ValidatePluginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_registry_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatePluginRequest.ProtoReflect.Descriptor instead.
func (*ValidatePluginRequest) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_registry_proto_rawDescGZIP(), []int{19}
}

func (x *ValidatePluginRequest) GetManifest() *PluginManifest {
	if x != nil {
		return x.Manifest
	}
	return nil
}

func (x *ValidatePluginRequest) GetCheckDependencies() bool {
	if x != nil {
		return x.CheckDependencies
	}
	return false
}

func (x *ValidatePluginRequest) GetCheckSystemRequirements() bool {
	if x != nil {
		return x.CheckSystemRequirements
	}
	return false
}

// ValidatePluginResponse contains plugin validation results.
type ValidatePluginResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// valid indicates if the plugin passed validation
	Valid bool `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	// validation_errors lists any validation errors found
	ValidationErrors []*ValidationError `protobuf:"bytes,2,rep,name=validation_errors,json=validationErrors,proto3" json:"validation_errors,omitempty"`
	// warnings lists any validation warnings
	Warnings      []*ValidationWarning `protobuf:"bytes,3,rep,name=warnings,proto3" json:"warnings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidatePluginResponse) Reset() {
	*x = ValidatePluginResponse{}
	mi := &file_pulumicost_v1_registry_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidatePluginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatePluginResponse) ProtoMessage() {}

func (x *ValidatePluginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_registry_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatePluginResponse.ProtoReflect.Descriptor instead.
func (*ValidatePluginResponse) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_registry_proto_rawDescGZIP(), []int{20}
}

func (x *ValidatePluginResponse) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *ValidatePluginResponse) GetValidationErrors() []*ValidationError {
	if x != nil {
		return x.ValidationErrors
	}
	return nil
}

func (x *ValidatePluginResponse) GetWarnings() []*ValidationWarning {
	if x != nil {
		return x.Warnings
	}
	return nil
}

// ValidationError represents a plugin validation error.
type ValidationError struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// code is the error code
	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	// message provides a human-readable error message
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// field indicates the field that caused the error
	Field string `protobuf:"bytes,3,opt,name=field,proto3" json:"field,omitempty"`
	// severity indicates the error severity
	Severity      ErrorSeverity `protobuf:"varint,4,opt,name=severity,proto3,enum=pulumicost.v1.ErrorSeverity" json:"severity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidationError) Reset() {
	*x = ValidationError{}
	mi := &file_pulumicost_v1_registry_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidationError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationError) ProtoMessage() {}

func (x *ValidationError) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_registry_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationError.ProtoReflect.Descriptor instead.
func (*ValidationError) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_registry_proto_rawDescGZIP(), []int{21}
}

func (x *ValidationError) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ValidationError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ValidationError) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *ValidationError) GetSeverity() ErrorSeverity {
	if x != nil {
		return x.Severity
	}
	return ErrorSeverity_ERROR_SEVERITY_UNSPECIFIED
}

// ValidationWarning represents a plugin validation warning.
type ValidationWarning struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// code is the warning code
	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	// message provides a human-readable warning message
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// field indicates the field that caused the warning
	Field string `protobuf:"bytes,3,opt,name=field,proto3" json:"field,omitempty"`
	// recommendation provides suggested remediation
	Recommendation string `protobuf:"bytes,4,opt,name=recommendation,proto3" json:"recommendation,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ValidationWarning) Reset() {
	*x = ValidationWarning{}
	mi := &file_pulumicost_v1_registry_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidationWarning) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationWarning) ProtoMessage() {}

func (x *ValidationWarning) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_registry_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationWarning.ProtoReflect.Descriptor instead.
func (*ValidationWarning) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_registry_proto_rawDescGZIP(), []int{22}
}

func (x *ValidationWarning) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ValidationWarning) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ValidationWarning) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *ValidationWarning) GetRecommendation() string {
	if x != nil {
		return x.Recommendation
	}
	return ""
}

// InstallPluginRequest requests plugin installation.
type InstallPluginRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// name of the plugin to install
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// version of the plugin to install (empty for latest)
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// source specifies the installation source
	Source DiscoverySource `protobuf:"varint,3,opt,name=source,proto3,enum=pulumicost.v1.DiscoverySource" json:"source,omitempty"`
	// location provides the plugin location
	Location string `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
	// force_install overwrites existing installation
	ForceInstall bool `protobuf:"varint,5,opt,name=force_install,json=forceInstall,proto3" json:"force_install,omitempty"`
	// verify_signature indicates whether to verify plugin signature
	VerifySignature bool `protobuf:"varint,6,opt,name=verify_signature,json=verifySignature,proto3" json:"verify_signature,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *InstallPluginRequest) Reset() {
	*x = InstallPluginRequest{}
	mi := &file_pulumicost_v1_registry_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallPluginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallPluginRequest) ProtoMessage() {}

func (x *InstallPluginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_registry_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallPluginRequest.ProtoReflect.Descriptor instead.
func (*InstallPluginRequest) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_registry_proto_rawDescGZIP(), []int{23}
}

func (x *InstallPluginRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InstallPluginRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *InstallPluginRequest) GetSource() DiscoverySource {
	if x != nil {
		return x.Source
	}
	return DiscoverySource_DISCOVERY_SOURCE_UNSPECIFIED
}

func (x *InstallPluginRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *InstallPluginRequest) GetForceInstall() bool {
	if x != nil {
		return x.ForceInstall
	}
	return false
}

func (x *InstallPluginRequest) GetVerifySignature() bool {
	if x != nil {
		return x.VerifySignature
	}
	return false
}

// InstallPluginResponse contains installation results.
type InstallPluginResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// success indicates if installation was successful
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// installed_version provides the actually installed version
	InstalledVersion string `protobuf:"bytes,2,opt,name=installed_version,json=installedVersion,proto3" json:"installed_version,omitempty"`
	// install_path provides the installation path
	InstallPath string `protobuf:"bytes,3,opt,name=install_path,json=installPath,proto3" json:"install_path,omitempty"`
	// installation_errors lists any installation errors
	InstallationErrors []*InstallationError `protobuf:"bytes,4,rep,name=installation_errors,json=installationErrors,proto3" json:"installation_errors,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *InstallPluginResponse) Reset() {
	*x = InstallPluginResponse{}
	mi := &file_pulumicost_v1_registry_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallPluginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallPluginResponse) ProtoMessage() {}

func (x *InstallPluginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_registry_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallPluginResponse.ProtoReflect.Descriptor instead.
func (*InstallPluginResponse) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_registry_proto_rawDescGZIP(), []int{24}
}

func (x *InstallPluginResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *InstallPluginResponse) GetInstalledVersion() string {
	if x != nil {
		return x.InstalledVersion
	}
	return ""
}

func (x *InstallPluginResponse) GetInstallPath() string {
	if x != nil {
		return x.InstallPath
	}
	return ""
}

func (x *InstallPluginResponse) GetInstallationErrors() []*InstallationError {
	if x != nil {
		return x.InstallationErrors
	}
	return nil
}

// InstallationError represents a plugin installation error.
type InstallationError struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// code is the error code
	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	// message provides a human-readable error message
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// step indicates the installation step that failed
	Step string `protobuf:"bytes,3,opt,name=step,proto3" json:"step,omitempty"`
	// recoverable indicates if the error can be recovered from
	Recoverable   bool `protobuf:"varint,4,opt,name=recoverable,proto3" json:"recoverable,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstallationError) Reset() {
	*x = InstallationError{}
	mi := &file_pulumicost_v1_registry_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallationError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallationError) ProtoMessage() {}

func (x *InstallationError) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_registry_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallationError.ProtoReflect.Descriptor instead.
func (*InstallationError) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_registry_proto_rawDescGZIP(), []int{25}
}

func (x *InstallationError) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *InstallationError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *InstallationError) GetStep() string {
	if x != nil {
		return x.Step
	}
	return ""
}

func (x *InstallationError) GetRecoverable() bool {
	if x != nil {
		return x.Recoverable
	}
	return false
}

// UpdatePluginRequest requests plugin update.
type UpdatePluginRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// name of the plugin to update
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// target_version specifies the version to update to (empty for latest)
	TargetVersion string `protobuf:"bytes,2,opt,name=target_version,json=targetVersion,proto3" json:"target_version,omitempty"`
	// allow_downgrade allows downgrading to older version
	AllowDowngrade bool `protobuf:"varint,3,opt,name=allow_downgrade,json=allowDowngrade,proto3" json:"allow_downgrade,omitempty"`
	// backup_current creates backup of current version
	BackupCurrent bool `protobuf:"varint,4,opt,name=backup_current,json=backupCurrent,proto3" json:"backup_current,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePluginRequest) Reset() {
	*x = UpdatePluginRequest{}
	mi := &file_pulumicost_v1_registry_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePluginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePluginRequest) ProtoMessage() {}

func (x *UpdatePluginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_registry_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePluginRequest.ProtoReflect.Descriptor instead.
func (*UpdatePluginRequest) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_registry_proto_rawDescGZIP(), []int{26}
}

func (x *UpdatePluginRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdatePluginRequest) GetTargetVersion() string {
	if x != nil {
		return x.TargetVersion
	}
	return ""
}

func (x *UpdatePluginRequest) GetAllowDowngrade() bool {
	if x != nil {
		return x.AllowDowngrade
	}
	return false
}

func (x *UpdatePluginRequest) GetBackupCurrent() bool {
	if x != nil {
		return x.BackupCurrent
	}
	return false
}

// UpdatePluginResponse contains update results.
type UpdatePluginResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// success indicates if update was successful
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// previous_version provides the previous version
	PreviousVersion string `protobuf:"bytes,2,opt,name=previous_version,json=previousVersion,proto3" json:"previous_version,omitempty"`
	// updated_version provides the new version
	UpdatedVersion string `protobuf:"bytes,3,opt,name=updated_version,json=updatedVersion,proto3" json:"updated_version,omitempty"`
	// backup_path provides the backup location if created
	BackupPath string `protobuf:"bytes,4,opt,name=backup_path,json=backupPath,proto3" json:"backup_path,omitempty"`
	// update_errors lists any update errors
	UpdateErrors  []*InstallationError `protobuf:"bytes,5,rep,name=update_errors,json=updateErrors,proto3" json:"update_errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePluginResponse) Reset() {
	*x = UpdatePluginResponse{}
	mi := &file_pulumicost_v1_registry_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePluginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePluginResponse) ProtoMessage() {}

func (x *UpdatePluginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_registry_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePluginResponse.ProtoReflect.Descriptor instead.
func (*UpdatePluginResponse) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_registry_proto_rawDescGZIP(), []int{27}
}

func (x *UpdatePluginResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdatePluginResponse) GetPreviousVersion() string {
	if x != nil {
		return x.PreviousVersion
	}
	return ""
}

func (x *UpdatePluginResponse) GetUpdatedVersion() string {
	if x != nil {
		return x.UpdatedVersion
	}
	return ""
}

func (x *UpdatePluginResponse) GetBackupPath() string {
	if x != nil {
		return x.BackupPath
	}
	return ""
}

func (x *UpdatePluginResponse) GetUpdateErrors() []*InstallationError {
	if x != nil {
		return x.UpdateErrors
	}
	return nil
}

// RemovePluginRequest requests plugin removal.
type RemovePluginRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// name of the plugin to remove
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// cleanup_data indicates whether to remove plugin data
	CleanupData bool `protobuf:"varint,2,opt,name=cleanup_data,json=cleanupData,proto3" json:"cleanup_data,omitempty"`
	// force_remove forces removal even if plugin is in use
	ForceRemove   bool `protobuf:"varint,3,opt,name=force_remove,json=forceRemove,proto3" json:"force_remove,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemovePluginRequest) Reset() {
	*x = RemovePluginRequest{}
	mi := &file_pulumicost_v1_registry_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemovePluginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePluginRequest) ProtoMessage() {}

func (x *RemovePluginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_registry_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePluginRequest.ProtoReflect.Descriptor instead.
func (*RemovePluginRequest) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_registry_proto_rawDescGZIP(), []int{28}
}

func (x *RemovePluginRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RemovePluginRequest) GetCleanupData() bool {
	if x != nil {
		return x.CleanupData
	}
	return false
}

func (x *RemovePluginRequest) GetForceRemove() bool {
	if x != nil {
		return x.ForceRemove
	}
	return false
}

// RemovePluginResponse contains removal results.
type RemovePluginResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// success indicates if removal was successful
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// removed_version provides the version that was removed
	RemovedVersion string `protobuf:"bytes,2,opt,name=removed_version,json=removedVersion,proto3" json:"removed_version,omitempty"`
	// cleanup_paths lists paths that were cleaned up
	CleanupPaths []string `protobuf:"bytes,3,rep,name=cleanup_paths,json=cleanupPaths,proto3" json:"cleanup_paths,omitempty"`
	// removal_errors lists any removal errors
	RemovalErrors []*InstallationError `protobuf:"bytes,4,rep,name=removal_errors,json=removalErrors,proto3" json:"removal_errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemovePluginResponse) Reset() {
	*x = RemovePluginResponse{}
	mi := &file_pulumicost_v1_registry_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemovePluginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePluginResponse) ProtoMessage() {}

func (x *RemovePluginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_registry_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePluginResponse.ProtoReflect.Descriptor instead.
func (*RemovePluginResponse) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_registry_proto_rawDescGZIP(), []int{29}
}

func (x *RemovePluginResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RemovePluginResponse) GetRemovedVersion() string {
	if x != nil {
		return x.RemovedVersion
	}
	return ""
}

func (x *RemovePluginResponse) GetCleanupPaths() []string {
	if x != nil {
		return x.CleanupPaths
	}
	return nil
}

func (x *RemovePluginResponse) GetRemovalErrors() []*InstallationError {
	if x != nil {
		return x.RemovalErrors
	}
	return nil
}

// ListInstalledPluginsRequest requests list of installed plugins.
type ListInstalledPluginsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// filter optionally filters results by plugin name pattern
	Filter string `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	// include_inactive includes inactive plugins in results
	IncludeInactive bool `protobuf:"varint,2,opt,name=include_inactive,json=includeInactive,proto3" json:"include_inactive,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListInstalledPluginsRequest) Reset() {
	*x = ListInstalledPluginsRequest{}
	mi := &file_pulumicost_v1_registry_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListInstalledPluginsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInstalledPluginsRequest) ProtoMessage() {}

func (x *ListInstalledPluginsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_registry_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInstalledPluginsRequest.ProtoReflect.Descriptor instead.
func (*ListInstalledPluginsRequest) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_registry_proto_rawDescGZIP(), []int{30}
}

func (x *ListInstalledPluginsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListInstalledPluginsRequest) GetIncludeInactive() bool {
	if x != nil {
		return x.IncludeInactive
	}
	return false
}

// ListInstalledPluginsResponse contains installed plugin list.
type ListInstalledPluginsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// plugins contains the list of installed plugins
	Plugins       []*PluginInfo `protobuf:"bytes,1,rep,name=plugins,proto3" json:"plugins,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListInstalledPluginsResponse) Reset() {
	*x = ListInstalledPluginsResponse{}
	mi := &file_pulumicost_v1_registry_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListInstalledPluginsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInstalledPluginsResponse) ProtoMessage() {}

func (x *ListInstalledPluginsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_registry_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInstalledPluginsResponse.ProtoReflect.Descriptor instead.
func (*ListInstalledPluginsResponse) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_registry_proto_rawDescGZIP(), []int{31}
}

func (x *ListInstalledPluginsResponse) GetPlugins() []*PluginInfo {
	if x != nil {
		return x.Plugins
	}
	return nil
}

// CheckPluginHealthRequest requests plugin health check.
type CheckPluginHealthRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// name of the plugin to check
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// timeout_seconds specifies health check timeout
	TimeoutSeconds int32 `protobuf:"varint,2,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CheckPluginHealthRequest) Reset() {
	*x = CheckPluginHealthRequest{}
	mi := &file_pulumicost_v1_registry_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckPluginHealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPluginHealthRequest) ProtoMessage() {}

func (x *CheckPluginHealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_registry_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPluginHealthRequest.ProtoReflect.Descriptor instead.
func (*CheckPluginHealthRequest) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_registry_proto_rawDescGZIP(), []int{32}
}

func (x *CheckPluginHealthRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CheckPluginHealthRequest) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

// CheckPluginHealthResponse contains plugin health status.
type CheckPluginHealthResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// healthy indicates if plugin is healthy
	Healthy bool `protobuf:"varint,1,opt,name=healthy,proto3" json:"healthy,omitempty"`
	// status provides detailed status information
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	// last_check_time indicates when health was last checked
	LastCheckTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=last_check_time,json=lastCheckTime,proto3" json:"last_check_time,omitempty"`
	// health_errors lists any health check errors
	HealthErrors  []*HealthCheckError `protobuf:"bytes,4,rep,name=health_errors,json=healthErrors,proto3" json:"health_errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckPluginHealthResponse) Reset() {
	*x = CheckPluginHealthResponse{}
	mi := &file_pulumicost_v1_registry_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckPluginHealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPluginHealthResponse) ProtoMessage() {}

func (x *CheckPluginHealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_registry_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPluginHealthResponse.ProtoReflect.Descriptor instead.
func (*CheckPluginHealthResponse) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_registry_proto_rawDescGZIP(), []int{33}
}

func (x *CheckPluginHealthResponse) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

func (x *CheckPluginHealthResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CheckPluginHealthResponse) GetLastCheckTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastCheckTime
	}
	return nil
}

func (x *CheckPluginHealthResponse) GetHealthErrors() []*HealthCheckError {
	if x != nil {
		return x.HealthErrors
	}
	return nil
}

// HealthCheckError represents a plugin health check error.
type HealthCheckError struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// code is the error code
	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	// message provides a human-readable error message
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// component indicates which plugin component has the error
	Component string `protobuf:"bytes,3,opt,name=component,proto3" json:"component,omitempty"`
	// severity indicates the error severity
	Severity      ErrorSeverity `protobuf:"varint,4,opt,name=severity,proto3,enum=pulumicost.v1.ErrorSeverity" json:"severity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckError) Reset() {
	*x = HealthCheckError{}
	mi := &file_pulumicost_v1_registry_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckError) ProtoMessage() {}

func (x *HealthCheckError) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_registry_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckError.ProtoReflect.Descriptor instead.
func (*HealthCheckError) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_registry_proto_rawDescGZIP(), []int{34}
}

func (x *HealthCheckError) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *HealthCheckError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HealthCheckError) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *HealthCheckError) GetSeverity() ErrorSeverity {
	if x != nil {
		return x.Severity
	}
	return ErrorSeverity_ERROR_SEVERITY_UNSPECIFIED
}

// DiscoveryError represents an error during plugin discovery.
type DiscoveryError struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// source indicates which discovery source had the error
	Source DiscoverySource `protobuf:"varint,1,opt,name=source,proto3,enum=pulumicost.v1.DiscoverySource" json:"source,omitempty"`
	// location provides the location where error occurred
	Location string `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	// error_code is the error code
	ErrorCode string `protobuf:"bytes,3,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// error_message provides a human-readable error message
	ErrorMessage  string `protobuf:"bytes,4,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiscoveryError) Reset() {
	*x = DiscoveryError{}
	mi := &file_pulumicost_v1_registry_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiscoveryError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoveryError) ProtoMessage() {}

func (x *DiscoveryError) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_registry_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoveryError.ProtoReflect.Descriptor instead.
func (*DiscoveryError) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_registry_proto_rawDescGZIP(), []int{35}
}

func (x *DiscoveryError) GetSource() DiscoverySource {
	if x != nil {
		return x.Source
	}
	return DiscoverySource_DISCOVERY_SOURCE_UNSPECIFIED
}

func (x *DiscoveryError) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *DiscoveryError) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *DiscoveryError) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

var File_pulumicost_v1_registry_proto protoreflect.FileDescriptor

const file_pulumicost_v1_registry_proto_rawDesc = "" +
	"\n" +
	"\x1cpulumicost/v1/registry.proto\x12\rpulumicost.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\x97\x01\n" +
	"\x16DiscoverPluginsRequest\x128\n" +
	"\asources\x18\x01 \x03(\x0e2\x1e.pulumicost.v1.DiscoverySourceR\asources\x12\x16\n" +
	"\x06filter\x18\x02 \x01(\tR\x06filter\x12+\n" +
	"\x11include_installed\x18\x03 \x01(\bR\x10includeInstalled\"\x98\x01\n" +
	"\x17DiscoverPluginsResponse\x123\n" +
	"\aplugins\x18\x01 \x03(\v2\x19.pulumicost.v1.PluginInfoR\aplugins\x12H\n" +
	"\x10discovery_errors\x18\x02 \x03(\v2\x1d.pulumicost.v1.DiscoveryErrorR\x0fdiscoveryErrors\"\x91\x04\n" +
	"\n" +
	"PluginInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x16\n" +
	"\x06author\x18\x04 \x01(\tR\x06author\x126\n" +
	"\x06source\x18\x05 \x01(\x0e2\x1e.pulumicost.v1.DiscoverySourceR\x06source\x12\x1a\n" +
	"\blocation\x18\x06 \x01(\tR\blocation\x123\n" +
	"\x06status\x18\a \x01(\x0e2\x1b.pulumicost.v1.PluginStatusR\x06status\x12C\n" +
	"\x0esecurity_level\x18\b \x01(\x0e2\x1c.pulumicost.v1.SecurityLevelR\rsecurityLevel\x12\"\n" +
	"\fcapabilities\x18\t \x03(\tR\fcapabilities\x12E\n" +
	"\frequirements\x18\n" +
	" \x01(\v2!.pulumicost.v1.PluginRequirementsR\frequirements\x12#\n" +
	"\rmanifest_hash\x18\v \x01(\tR\fmanifestHash\x12=\n" +
	"\flast_updated\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\vlastUpdated\"\xd8\x02\n" +
	"\x12PluginRequirements\x12(\n" +
	"\x10min_spec_version\x18\x01 \x01(\tR\x0eminSpecVersion\x12(\n" +
	"\x10max_spec_version\x18\x02 \x01(\tR\x0emaxSpecVersion\x12C\n" +
	"\fdependencies\x18\x03 \x03(\v2\x1f.pulumicost.v1.PluginDependencyR\fdependencies\x12R\n" +
	"\x13system_requirements\x18\x04 \x01(\v2!.pulumicost.v1.SystemRequirementsR\x12systemRequirements\x12U\n" +
	"\x14runtime_requirements\x18\x05 \x01(\v2\".pulumicost.v1.RuntimeRequirementsR\x13runtimeRequirements\"q\n" +
	"\x10PluginDependency\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12-\n" +
	"\x12version_constraint\x18\x02 \x01(\tR\x11versionConstraint\x12\x1a\n" +
	"\boptional\x18\x03 \x01(\bR\boptional\"\xb4\x01\n" +
	"\x12SystemRequirements\x12\"\n" +
	"\rmin_memory_mb\x18\x01 \x01(\x03R\vminMemoryMb\x12\x1e\n" +
	"\vmin_disk_mb\x18\x02 \x01(\x03R\tminDiskMb\x127\n" +
	"\x17supported_architectures\x18\x03 \x03(\tR\x16supportedArchitectures\x12!\n" +
	"\fsupported_os\x18\x04 \x03(\tR\vsupportedOs\"\xa7\x01\n" +
	"\x13RuntimeRequirements\x12!\n" +
	"\fgrpc_version\x18\x01 \x01(\tR\vgrpcVersion\x12!\n" +
	"\ftls_required\x18\x02 \x01(\bR\vtlsRequired\x12!\n" +
	"\fauth_methods\x18\x03 \x03(\tR\vauthMethods\x12'\n" +
	"\x0ftimeout_seconds\x18\x04 \x01(\x05R\x0etimeoutSeconds\"\x9c\x01\n" +
	"\x18GetPluginManifestRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x126\n" +
	"\x06source\x18\x03 \x01(\x0e2\x1e.pulumicost.v1.DiscoverySourceR\x06source\x12\x1a\n" +
	"\blocation\x18\x04 \x01(\tR\blocation\"V\n" +
	"\x19GetPluginManifestResponse\x129\n" +
	"\bmanifest\x18\x01 \x01(\v2\x1d.pulumicost.v1.PluginManifestR\bmanifest\"\xdd\x02\n" +
	"\x0ePluginManifest\x129\n" +
	"\bmetadata\x18\x01 \x01(\v2\x1d.pulumicost.v1.PluginMetadataR\bmetadata\x12H\n" +
	"\rspecification\x18\x02 \x01(\v2\".pulumicost.v1.PluginSpecificationR\rspecification\x129\n" +
	"\bsecurity\x18\x03 \x01(\v2\x1d.pulumicost.v1.PluginSecurityR\bsecurity\x12C\n" +
	"\finstallation\x18\x04 \x01(\v2\x1f.pulumicost.v1.InstallationSpecR\finstallation\x12F\n" +
	"\rconfiguration\x18\x05 \x01(\v2 .pulumicost.v1.ConfigurationSpecR\rconfiguration\"\xe0\x02\n" +
	"\x0ePluginMetadata\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x16\n" +
	"\x06author\x18\x04 \x01(\tR\x06author\x12\x1a\n" +
	"\bhomepage\x18\x05 \x01(\tR\bhomepage\x12\x1e\n" +
	"\n" +
	"repository\x18\x06 \x01(\tR\n" +
	"repository\x12\x18\n" +
	"\alicense\x18\a \x01(\tR\alicense\x12\x1a\n" +
	"\bkeywords\x18\b \x03(\tR\bkeywords\x129\n" +
	"\n" +
	"created_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"\x8e\x04\n" +
	"\x13PluginSpecification\x12!\n" +
	"\fspec_version\x18\x01 \x01(\tR\vspecVersion\x12/\n" +
	"\x13supported_providers\x18\x02 \x03(\tR\x12supportedProviders\x12k\n" +
	"\x13supported_resources\x18\x03 \x03(\v2:.pulumicost.v1.PluginSpecification.SupportedResourcesEntryR\x12supportedResources\x12\"\n" +
	"\fcapabilities\x18\x04 \x03(\tR\fcapabilities\x12O\n" +
	"\x12service_definition\x18\x05 \x01(\v2 .pulumicost.v1.ServiceDefinitionR\x11serviceDefinition\x12X\n" +
	"\x15observability_support\x18\x06 \x01(\v2#.pulumicost.v1.ObservabilitySupportR\x14observabilitySupport\x1ag\n" +
	"\x17SupportedResourcesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x126\n" +
	"\x05value\x18\x02 \x01(\v2 .pulumicost.v1.ProviderResourcesR\x05value:\x028\x01\"y\n" +
	"\x11ProviderResources\x12%\n" +
	"\x0eresource_types\x18\x01 \x03(\tR\rresourceTypes\x12#\n" +
	"\rbilling_modes\x18\x02 \x03(\tR\fbillingModes\x12\x18\n" +
	"\aregions\x18\x03 \x03(\tR\aregions\"\xb3\x01\n" +
	"\x11ServiceDefinition\x12!\n" +
	"\fservice_name\x18\x01 \x01(\tR\vserviceName\x12!\n" +
	"\fpackage_name\x18\x02 \x01(\tR\vpackageName\x12\x18\n" +
	"\amethods\x18\x03 \x03(\tR\amethods\x12\x12\n" +
	"\x04port\x18\x04 \x01(\x05R\x04port\x12*\n" +
	"\x11health_check_path\x18\x05 \x01(\tR\x0fhealthCheckPath\"\xe6\x01\n" +
	"\x14ObservabilitySupport\x12'\n" +
	"\x0fmetrics_enabled\x18\x01 \x01(\bR\x0emetricsEnabled\x12'\n" +
	"\x0ftracing_enabled\x18\x02 \x01(\bR\x0etracingEnabled\x12'\n" +
	"\x0flogging_enabled\x18\x03 \x01(\bR\x0eloggingEnabled\x122\n" +
	"\x15health_checks_enabled\x18\x04 \x01(\bR\x13healthChecksEnabled\x12\x1f\n" +
	"\vsli_support\x18\x05 \x01(\bR\n" +
	"sliSupport\"\x8c\x02\n" +
	"\x0ePluginSecurity\x12\x1c\n" +
	"\tsignature\x18\x01 \x01(\tR\tsignature\x12\x1d\n" +
	"\n" +
	"public_key\x18\x02 \x01(\tR\tpublicKey\x12+\n" +
	"\x11certificate_chain\x18\x03 \x03(\tR\x10certificateChain\x12C\n" +
	"\x0esecurity_level\x18\x04 \x01(\x0e2\x1c.pulumicost.v1.SecurityLevelR\rsecurityLevel\x12 \n" +
	"\vpermissions\x18\x05 \x03(\tR\vpermissions\x12)\n" +
	"\x10sandbox_required\x18\x06 \x01(\bR\x0fsandboxRequired\"\xd7\x02\n" +
	"\x10InstallationSpec\x12R\n" +
	"\x13installation_method\x18\x01 \x01(\x0e2!.pulumicost.v1.InstallationMethodR\x12installationMethod\x12!\n" +
	"\fdownload_url\x18\x02 \x01(\tR\vdownloadUrl\x12\x1a\n" +
	"\bchecksum\x18\x03 \x01(\tR\bchecksum\x12-\n" +
	"\x12checksum_algorithm\x18\x04 \x01(\tR\x11checksumAlgorithm\x12%\n" +
	"\x0einstall_script\x18\x05 \x01(\tR\rinstallScript\x12,\n" +
	"\x12pre_install_checks\x18\x06 \x03(\tR\x10preInstallChecks\x12,\n" +
	"\x12post_install_steps\x18\a \x03(\tR\x10postInstallSteps\"\xbc\x01\n" +
	"\x11ConfigurationSpec\x12\x16\n" +
	"\x06schema\x18\x01 \x01(\tR\x06schema\x12%\n" +
	"\x0edefault_config\x18\x02 \x01(\tR\rdefaultConfig\x12'\n" +
	"\x0frequired_fields\x18\x03 \x03(\tR\x0erequiredFields\x12?\n" +
	"\bexamples\x18\x04 \x03(\v2#.pulumicost.v1.ConfigurationExampleR\bexamples\"d\n" +
	"\x14ConfigurationExample\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x16\n" +
	"\x06config\x18\x03 \x01(\tR\x06config\"\xbd\x01\n" +
	"\x15ValidatePluginRequest\x129\n" +
	"\bmanifest\x18\x01 \x01(\v2\x1d.pulumicost.v1.PluginManifestR\bmanifest\x12-\n" +
	"\x12check_dependencies\x18\x02 \x01(\bR\x11checkDependencies\x12:\n" +
	"\x19check_system_requirements\x18\x03 \x01(\bR\x17checkSystemRequirements\"\xb9\x01\n" +
	"\x16ValidatePluginResponse\x12\x14\n" +
	"\x05valid\x18\x01 \x01(\bR\x05valid\x12K\n" +
	"\x11validation_errors\x18\x02 \x03(\v2\x1e.pulumicost.v1.ValidationErrorR\x10validationErrors\x12<\n" +
	"\bwarnings\x18\x03 \x03(\v2 .pulumicost.v1.ValidationWarningR\bwarnings\"\x8f\x01\n" +
	"\x0fValidationError\x12\x12\n" +
	"\x04code\x18\x01 \x01(\tR\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x14\n" +
	"\x05field\x18\x03 \x01(\tR\x05field\x128\n" +
	"\bseverity\x18\x04 \x01(\x0e2\x1c.pulumicost.v1.ErrorSeverityR\bseverity\"\x7f\n" +
	"\x11ValidationWarning\x12\x12\n" +
	"\x04code\x18\x01 \x01(\tR\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x14\n" +
	"\x05field\x18\x03 \x01(\tR\x05field\x12&\n" +
	"\x0erecommendation\x18\x04 \x01(\tR\x0erecommendation\"\xe8\x01\n" +
	"\x14InstallPluginRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x126\n" +
	"\x06source\x18\x03 \x01(\x0e2\x1e.pulumicost.v1.DiscoverySourceR\x06source\x12\x1a\n" +
	"\blocation\x18\x04 \x01(\tR\blocation\x12#\n" +
	"\rforce_install\x18\x05 \x01(\bR\fforceInstall\x12)\n" +
	"\x10verify_signature\x18\x06 \x01(\bR\x0fverifySignature\"\xd4\x01\n" +
	"\x15InstallPluginResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12+\n" +
	"\x11installed_version\x18\x02 \x01(\tR\x10installedVersion\x12!\n" +
	"\finstall_path\x18\x03 \x01(\tR\vinstallPath\x12Q\n" +
	"\x13installation_errors\x18\x04 \x03(\v2 .pulumicost.v1.InstallationErrorR\x12installationErrors\"w\n" +
	"\x11InstallationError\x12\x12\n" +
	"\x04code\x18\x01 \x01(\tR\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x12\n" +
	"\x04step\x18\x03 \x01(\tR\x04step\x12 \n" +
	"\vrecoverable\x18\x04 \x01(\bR\vrecoverable\"\xa0\x01\n" +
	"\x13UpdatePluginRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12%\n" +
	"\x0etarget_version\x18\x02 \x01(\tR\rtargetVersion\x12'\n" +
	"\x0fallow_downgrade\x18\x03 \x01(\bR\x0eallowDowngrade\x12%\n" +
	"\x0ebackup_current\x18\x04 \x01(\bR\rbackupCurrent\"\xec\x01\n" +
	"\x14UpdatePluginResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12)\n" +
	"\x10previous_version\x18\x02 \x01(\tR\x0fpreviousVersion\x12'\n" +
	"\x0fupdated_version\x18\x03 \x01(\tR\x0eupdatedVersion\x12\x1f\n" +
	"\vbackup_path\x18\x04 \x01(\tR\n" +
	"backupPath\x12E\n" +
	"\rupdate_errors\x18\x05 \x03(\v2 .pulumicost.v1.InstallationErrorR\fupdateErrors\"o\n" +
	"\x13RemovePluginRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12!\n" +
	"\fcleanup_data\x18\x02 \x01(\bR\vcleanupData\x12!\n" +
	"\fforce_remove\x18\x03 \x01(\bR\vforceRemove\"\xc7\x01\n" +
	"\x14RemovePluginResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12'\n" +
	"\x0fremoved_version\x18\x02 \x01(\tR\x0eremovedVersion\x12#\n" +
	"\rcleanup_paths\x18\x03 \x03(\tR\fcleanupPaths\x12G\n" +
	"\x0eremoval_errors\x18\x04 \x03(\v2 .pulumicost.v1.InstallationErrorR\rremovalErrors\"`\n" +
	"\x1bListInstalledPluginsRequest\x12\x16\n" +
	"\x06filter\x18\x01 \x01(\tR\x06filter\x12)\n" +
	"\x10include_inactive\x18\x02 \x01(\bR\x0fincludeInactive\"S\n" +
	"\x1cListInstalledPluginsResponse\x123\n" +
	"\aplugins\x18\x01 \x03(\v2\x19.pulumicost.v1.PluginInfoR\aplugins\"W\n" +
	"\x18CheckPluginHealthRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12'\n" +
	"\x0ftimeout_seconds\x18\x02 \x01(\x05R\x0etimeoutSeconds\"\xd7\x01\n" +
	"\x19CheckPluginHealthResponse\x12\x18\n" +
	"\ahealthy\x18\x01 \x01(\bR\ahealthy\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12B\n" +
	"\x0flast_check_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\rlastCheckTime\x12D\n" +
	"\rhealth_errors\x18\x04 \x03(\v2\x1f.pulumicost.v1.HealthCheckErrorR\fhealthErrors\"\x98\x01\n" +
	"\x10HealthCheckError\x12\x12\n" +
	"\x04code\x18\x01 \x01(\tR\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1c\n" +
	"\tcomponent\x18\x03 \x01(\tR\tcomponent\x128\n" +
	"\bseverity\x18\x04 \x01(\x0e2\x1c.pulumicost.v1.ErrorSeverityR\bseverity\"\xa8\x01\n" +
	"\x0eDiscoveryError\x126\n" +
	"\x06source\x18\x01 \x01(\x0e2\x1e.pulumicost.v1.DiscoverySourceR\x06source\x12\x1a\n" +
	"\blocation\x18\x02 \x01(\tR\blocation\x12\x1d\n" +
	"\n" +
	"error_code\x18\x03 \x01(\tR\terrorCode\x12#\n" +
	"\rerror_message\x18\x04 \x01(\tR\ferrorMessage*\xa7\x01\n" +
	"\x0fDiscoverySource\x12 \n" +
	"\x1cDISCOVERY_SOURCE_UNSPECIFIED\x10\x00\x12\x1f\n" +
	"\x1bDISCOVERY_SOURCE_FILESYSTEM\x10\x01\x12\x1d\n" +
	"\x19DISCOVERY_SOURCE_REGISTRY\x10\x02\x12\x18\n" +
	"\x14DISCOVERY_SOURCE_URL\x10\x03\x12\x18\n" +
	"\x14DISCOVERY_SOURCE_GIT\x10\x04*\xd2\x01\n" +
	"\fPluginStatus\x12\x1d\n" +
	"\x19PLUGIN_STATUS_UNSPECIFIED\x10\x00\x12\x1b\n" +
	"\x17PLUGIN_STATUS_AVAILABLE\x10\x01\x12\x1b\n" +
	"\x17PLUGIN_STATUS_INSTALLED\x10\x02\x12\x18\n" +
	"\x14PLUGIN_STATUS_ACTIVE\x10\x03\x12\x1a\n" +
	"\x16PLUGIN_STATUS_INACTIVE\x10\x04\x12\x17\n" +
	"\x13PLUGIN_STATUS_ERROR\x10\x05\x12\x1a\n" +
	"\x16PLUGIN_STATUS_UPDATING\x10\x06*\xa5\x01\n" +
	"\rSecurityLevel\x12\x1e\n" +
	"\x1aSECURITY_LEVEL_UNSPECIFIED\x10\x00\x12\x1c\n" +
	"\x18SECURITY_LEVEL_UNTRUSTED\x10\x01\x12\x1c\n" +
	"\x18SECURITY_LEVEL_COMMUNITY\x10\x02\x12\x1b\n" +
	"\x17SECURITY_LEVEL_VERIFIED\x10\x03\x12\x1b\n" +
	"\x17SECURITY_LEVEL_OFFICIAL\x10\x04*\xbd\x01\n" +
	"\x12InstallationMethod\x12#\n" +
	"\x1fINSTALLATION_METHOD_UNSPECIFIED\x10\x00\x12\x1e\n" +
	"\x1aINSTALLATION_METHOD_BINARY\x10\x01\x12!\n" +
	"\x1dINSTALLATION_METHOD_CONTAINER\x10\x02\x12\x1e\n" +
	"\x1aINSTALLATION_METHOD_SCRIPT\x10\x03\x12\x1f\n" +
	"\x1bINSTALLATION_METHOD_PACKAGE\x10\x04*\x9b\x01\n" +
	"\rErrorSeverity\x12\x1e\n" +
	"\x1aERROR_SEVERITY_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13ERROR_SEVERITY_INFO\x10\x01\x12\x1a\n" +
	"\x16ERROR_SEVERITY_WARNING\x10\x02\x12\x18\n" +
	"\x14ERROR_SEVERITY_ERROR\x10\x03\x12\x1b\n" +
	"\x17ERROR_SEVERITY_CRITICAL\x10\x042\xa7\x06\n" +
	"\x15PluginRegistryService\x12`\n" +
	"\x0fDiscoverPlugins\x12%.pulumicost.v1.DiscoverPluginsRequest\x1a&.pulumicost.v1.DiscoverPluginsResponse\x12f\n" +
	"\x11GetPluginManifest\x12'.pulumicost.v1.GetPluginManifestRequest\x1a(.pulumicost.v1.GetPluginManifestResponse\x12]\n" +
	"\x0eValidatePlugin\x12$.pulumicost.v1.ValidatePluginRequest\x1a%.pulumicost.v1.ValidatePluginResponse\x12Z\n" +
	"\rInstallPlugin\x12#.pulumicost.v1.InstallPluginRequest\x1a$.pulumicost.v1.InstallPluginResponse\x12W\n" +
	"\fUpdatePlugin\x12\".pulumicost.v1.UpdatePluginRequest\x1a#.pulumicost.v1.UpdatePluginResponse\x12W\n" +
	"\fRemovePlugin\x12\".pulumicost.v1.RemovePluginRequest\x1a#.pulumicost.v1.RemovePluginResponse\x12o\n" +
	"\x14ListInstalledPlugins\x12*.pulumicost.v1.ListInstalledPluginsRequest\x1a+.pulumicost.v1.ListInstalledPluginsResponse\x12f\n" +
	"\x11CheckPluginHealth\x12'.pulumicost.v1.CheckPluginHealthRequest\x1a(.pulumicost.v1.CheckPluginHealthResponseB4Z2github.com/rshade/pulumicost-spec/sdk/go/proto;pbcb\x06proto3"

var (
	file_pulumicost_v1_registry_proto_rawDescOnce sync.Once
	file_pulumicost_v1_registry_proto_rawDescData []byte
)

func file_pulumicost_v1_registry_proto_rawDescGZIP() []byte {
	file_pulumicost_v1_registry_proto_rawDescOnce.Do(func() {
		file_pulumicost_v1_registry_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pulumicost_v1_registry_proto_rawDesc), len(file_pulumicost_v1_registry_proto_rawDesc)))
	})
	return file_pulumicost_v1_registry_proto_rawDescData
}

var file_pulumicost_v1_registry_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_pulumicost_v1_registry_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_pulumicost_v1_registry_proto_goTypes = []any{
	(DiscoverySource)(0),                 // 0: pulumicost.v1.DiscoverySource
	(PluginStatus)(0),                    // 1: pulumicost.v1.PluginStatus
	(SecurityLevel)(0),                   // 2: pulumicost.v1.SecurityLevel
	(InstallationMethod)(0),              // 3: pulumicost.v1.InstallationMethod
	(ErrorSeverity)(0),                   // 4: pulumicost.v1.ErrorSeverity
	(*DiscoverPluginsRequest)(nil),       // 5: pulumicost.v1.DiscoverPluginsRequest
	(*DiscoverPluginsResponse)(nil),      // 6: pulumicost.v1.DiscoverPluginsResponse
	(*PluginInfo)(nil),                   // 7: pulumicost.v1.PluginInfo
	(*PluginRequirements)(nil),           // 8: pulumicost.v1.PluginRequirements
	(*PluginDependency)(nil),             // 9: pulumicost.v1.PluginDependency
	(*SystemRequirements)(nil),           // 10: pulumicost.v1.SystemRequirements
	(*RuntimeRequirements)(nil),          // 11: pulumicost.v1.RuntimeRequirements
	(*GetPluginManifestRequest)(nil),     // 12: pulumicost.v1.GetPluginManifestRequest
	(*GetPluginManifestResponse)(nil),    // 13: pulumicost.v1.GetPluginManifestResponse
	(*PluginManifest)(nil),               // 14: pulumicost.v1.PluginManifest
	(*PluginMetadata)(nil),               // 15: pulumicost.v1.PluginMetadata
	(*PluginSpecification)(nil),          // 16: pulumicost.v1.PluginSpecification
	(*ProviderResources)(nil),            // 17: pulumicost.v1.ProviderResources
	(*ServiceDefinition)(nil),            // 18: pulumicost.v1.ServiceDefinition
	(*ObservabilitySupport)(nil),         // 19: pulumicost.v1.ObservabilitySupport
	(*PluginSecurity)(nil),               // 20: pulumicost.v1.PluginSecurity
	(*InstallationSpec)(nil),             // 21: pulumicost.v1.InstallationSpec
	(*ConfigurationSpec)(nil),            // 22: pulumicost.v1.ConfigurationSpec
	(*ConfigurationExample)(nil),         // 23: pulumicost.v1.ConfigurationExample
	(*ValidatePluginRequest)(nil),        // 24: pulumicost.v1.ValidatePluginRequest
	(*ValidatePluginResponse)(nil),       // 25: pulumicost.v1.ValidatePluginResponse
	(*ValidationError)(nil),              // 26: pulumicost.v1.ValidationError
	(*ValidationWarning)(nil),            // 27: pulumicost.v1.ValidationWarning
	(*InstallPluginRequest)(nil),         // 28: pulumicost.v1.InstallPluginRequest
	(*InstallPluginResponse)(nil),        // 29: pulumicost.v1.InstallPluginResponse
	(*InstallationError)(nil),            // 30: pulumicost.v1.InstallationError
	(*UpdatePluginRequest)(nil),          // 31: pulumicost.v1.UpdatePluginRequest
	(*UpdatePluginResponse)(nil),         // 32: pulumicost.v1.UpdatePluginResponse
	(*RemovePluginRequest)(nil),          // 33: pulumicost.v1.RemovePluginRequest
	(*RemovePluginResponse)(nil),         // 34: pulumicost.v1.RemovePluginResponse
	(*ListInstalledPluginsRequest)(nil),  // 35: pulumicost.v1.ListInstalledPluginsRequest
	(*ListInstalledPluginsResponse)(nil), // 36: pulumicost.v1.ListInstalledPluginsResponse
	(*CheckPluginHealthRequest)(nil),     // 37: pulumicost.v1.CheckPluginHealthRequest
	(*CheckPluginHealthResponse)(nil),    // 38: pulumicost.v1.CheckPluginHealthResponse
	(*HealthCheckError)(nil),             // 39: pulumicost.v1.HealthCheckError
	(*DiscoveryError)(nil),               // 40: pulumicost.v1.DiscoveryError
	nil,                                  // 41: pulumicost.v1.PluginSpecification.SupportedResourcesEntry
	(*timestamppb.Timestamp)(nil),        // 42: google.protobuf.Timestamp
}
var file_pulumicost_v1_registry_proto_depIdxs = []int32{
	0,  // 0: pulumicost.v1.DiscoverPluginsRequest.sources:type_name -> pulumicost.v1.DiscoverySource
	7,  // 1: pulumicost.v1.DiscoverPluginsResponse.plugins:type_name -> pulumicost.v1.PluginInfo
	40, // 2: pulumicost.v1.DiscoverPluginsResponse.discovery_errors:type_name -> pulumicost.v1.DiscoveryError
	0,  // 3: pulumicost.v1.PluginInfo.source:type_name -> pulumicost.v1.DiscoverySource
	1,  // 4: pulumicost.v1.PluginInfo.status:type_name -> pulumicost.v1.PluginStatus
	2,  // 5: pulumicost.v1.PluginInfo.security_level:type_name -> pulumicost.v1.SecurityLevel
	8,  // 6: pulumicost.v1.PluginInfo.requirements:type_name -> pulumicost.v1.PluginRequirements
	42, // 7: pulumicost.v1.PluginInfo.last_updated:type_name -> google.protobuf.Timestamp
	9,  // 8: pulumicost.v1.PluginRequirements.dependencies:type_name -> pulumicost.v1.PluginDependency
	10, // 9: pulumicost.v1.PluginRequirements.system_requirements:type_name -> pulumicost.v1.SystemRequirements
	11, // 10: pulumicost.v1.PluginRequirements.runtime_requirements:type_name -> pulumicost.v1.RuntimeRequirements
	0,  // 11: pulumicost.v1.GetPluginManifestRequest.source:type_name -> pulumicost.v1.DiscoverySource
	14, // 12: pulumicost.v1.GetPluginManifestResponse.manifest:type_name -> pulumicost.v1.PluginManifest
	15, // 13: pulumicost.v1.PluginManifest.metadata:type_name -> pulumicost.v1.PluginMetadata
	16, // 14: pulumicost.v1.PluginManifest.specification:type_name -> pulumicost.v1.PluginSpecification
	20, // 15: pulumicost.v1.PluginManifest.security:type_name -> pulumicost.v1.PluginSecurity
	21, // 16: pulumicost.v1.PluginManifest.installation:type_name -> pulumicost.v1.InstallationSpec
	22, // 17: pulumicost.v1.PluginManifest.configuration:type_name -> pulumicost.v1.ConfigurationSpec
	42, // 18: pulumicost.v1.PluginMetadata.created_at:type_name -> google.protobuf.Timestamp
	42, // 19: pulumicost.v1.PluginMetadata.updated_at:type_name -> google.protobuf.Timestamp
	41, // 20: pulumicost.v1.PluginSpecification.supported_resources:type_name -> pulumicost.v1.PluginSpecification.SupportedResourcesEntry
	18, // 21: pulumicost.v1.PluginSpecification.service_definition:type_name -> pulumicost.v1.ServiceDefinition
	19, // 22: pulumicost.v1.PluginSpecification.observability_support:type_name -> pulumicost.v1.ObservabilitySupport
	2,  // 23: pulumicost.v1.PluginSecurity.security_level:type_name -> pulumicost.v1.SecurityLevel
	3,  // 24: pulumicost.v1.InstallationSpec.installation_method:type_name -> pulumicost.v1.InstallationMethod
	23, // 25: pulumicost.v1.ConfigurationSpec.examples:type_name -> pulumicost.v1.ConfigurationExample
	14, // 26: pulumicost.v1.ValidatePluginRequest.manifest:type_name -> pulumicost.v1.PluginManifest
	26, // 27: pulumicost.v1.ValidatePluginResponse.validation_errors:type_name -> pulumicost.v1.ValidationError
	27, // 28: pulumicost.v1.ValidatePluginResponse.warnings:type_name -> pulumicost.v1.ValidationWarning
	4,  // 29: pulumicost.v1.ValidationError.severity:type_name -> pulumicost.v1.ErrorSeverity
	0,  // 30: pulumicost.v1.InstallPluginRequest.source:type_name -> pulumicost.v1.DiscoverySource
	30, // 31: pulumicost.v1.InstallPluginResponse.installation_errors:type_name -> pulumicost.v1.InstallationError
	30, // 32: pulumicost.v1.UpdatePluginResponse.update_errors:type_name -> pulumicost.v1.InstallationError
	30, // 33: pulumicost.v1.RemovePluginResponse.removal_errors:type_name -> pulumicost.v1.InstallationError
	7,  // 34: pulumicost.v1.ListInstalledPluginsResponse.plugins:type_name -> pulumicost.v1.PluginInfo
	42, // 35: pulumicost.v1.CheckPluginHealthResponse.last_check_time:type_name -> google.protobuf.Timestamp
	39, // 36: pulumicost.v1.CheckPluginHealthResponse.health_errors:type_name -> pulumicost.v1.HealthCheckError
	4,  // 37: pulumicost.v1.HealthCheckError.severity:type_name -> pulumicost.v1.ErrorSeverity
	0,  // 38: pulumicost.v1.DiscoveryError.source:type_name -> pulumicost.v1.DiscoverySource
	17, // 39: pulumicost.v1.PluginSpecification.SupportedResourcesEntry.value:type_name -> pulumicost.v1.ProviderResources
	5,  // 40: pulumicost.v1.PluginRegistryService.DiscoverPlugins:input_type -> pulumicost.v1.DiscoverPluginsRequest
	12, // 41: pulumicost.v1.PluginRegistryService.GetPluginManifest:input_type -> pulumicost.v1.GetPluginManifestRequest
	24, // 42: pulumicost.v1.PluginRegistryService.ValidatePlugin:input_type -> pulumicost.v1.ValidatePluginRequest
	28, // 43: pulumicost.v1.PluginRegistryService.InstallPlugin:input_type -> pulumicost.v1.InstallPluginRequest
	31, // 44: pulumicost.v1.PluginRegistryService.UpdatePlugin:input_type -> pulumicost.v1.UpdatePluginRequest
	33, // 45: pulumicost.v1.PluginRegistryService.RemovePlugin:input_type -> pulumicost.v1.RemovePluginRequest
	35, // 46: pulumicost.v1.PluginRegistryService.ListInstalledPlugins:input_type -> pulumicost.v1.ListInstalledPluginsRequest
	37, // 47: pulumicost.v1.PluginRegistryService.CheckPluginHealth:input_type -> pulumicost.v1.CheckPluginHealthRequest
	6,  // 48: pulumicost.v1.PluginRegistryService.DiscoverPlugins:output_type -> pulumicost.v1.DiscoverPluginsResponse
	13, // 49: pulumicost.v1.PluginRegistryService.GetPluginManifest:output_type -> pulumicost.v1.GetPluginManifestResponse
	25, // 50: pulumicost.v1.PluginRegistryService.ValidatePlugin:output_type -> pulumicost.v1.ValidatePluginResponse
	29, // 51: pulumicost.v1.PluginRegistryService.InstallPlugin:output_type -> pulumicost.v1.InstallPluginResponse
	32, // 52: pulumicost.v1.PluginRegistryService.UpdatePlugin:output_type -> pulumicost.v1.UpdatePluginResponse
	34, // 53: pulumicost.v1.PluginRegistryService.RemovePlugin:output_type -> pulumicost.v1.RemovePluginResponse
	36, // 54: pulumicost.v1.PluginRegistryService.ListInstalledPlugins:output_type -> pulumicost.v1.ListInstalledPluginsResponse
	38, // 55: pulumicost.v1.PluginRegistryService.CheckPluginHealth:output_type -> pulumicost.v1.CheckPluginHealthResponse
	48, // [48:56] is the sub-list for method output_type
	40, // [40:48] is the sub-list for method input_type
	40, // [40:40] is the sub-list for extension type_name
	40, // [40:40] is the sub-list for extension extendee
	0,  // [0:40] is the sub-list for field type_name
}

func init() { file_pulumicost_v1_registry_proto_init() }
func file_pulumicost_v1_registry_proto_init() {
	if File_pulumicost_v1_registry_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pulumicost_v1_registry_proto_rawDesc), len(file_pulumicost_v1_registry_proto_rawDesc)),
			NumEnums:      5,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pulumicost_v1_registry_proto_goTypes,
		DependencyIndexes: file_pulumicost_v1_registry_proto_depIdxs,
		EnumInfos:         file_pulumicost_v1_registry_proto_enumTypes,
		MessageInfos:      file_pulumicost_v1_registry_proto_msgTypes,
	}.Build()
	File_pulumicost_v1_registry_proto = out.File
	file_pulumicost_v1_registry_proto_goTypes = nil
	file_pulumicost_v1_registry_proto_depIdxs = nil
}
