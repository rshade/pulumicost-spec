// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: pulumicost/v1/costsource.proto

package pbc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// NameRequest is used for the Name RPC call (empty request).
type NameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NameRequest) Reset() {
	*x = NameRequest{}
	mi := &file_pulumicost_v1_costsource_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NameRequest) ProtoMessage() {}

func (x *NameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_costsource_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NameRequest.ProtoReflect.Descriptor instead.
func (*NameRequest) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_costsource_proto_rawDescGZIP(), []int{0}
}

// NameResponse contains the plugin name information.
type NameResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// name is the display name of the cost source plugin (e.g., "kubecost", "cloudability")
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NameResponse) Reset() {
	*x = NameResponse{}
	mi := &file_pulumicost_v1_costsource_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NameResponse) ProtoMessage() {}

func (x *NameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_costsource_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NameResponse.ProtoReflect.Descriptor instead.
func (*NameResponse) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_costsource_proto_rawDescGZIP(), []int{1}
}

func (x *NameResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// SupportsRequest contains the resource descriptor to check support for.
type SupportsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// resource contains the resource descriptor to check support for
	Resource      *ResourceDescriptor `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SupportsRequest) Reset() {
	*x = SupportsRequest{}
	mi := &file_pulumicost_v1_costsource_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SupportsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupportsRequest) ProtoMessage() {}

func (x *SupportsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_costsource_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupportsRequest.ProtoReflect.Descriptor instead.
func (*SupportsRequest) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_costsource_proto_rawDescGZIP(), []int{2}
}

func (x *SupportsRequest) GetResource() *ResourceDescriptor {
	if x != nil {
		return x.Resource
	}
	return nil
}

// SupportsResponse indicates whether the cost source supports the requested resource.
type SupportsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// supported indicates if the resource type is supported by this cost source
	Supported bool `protobuf:"varint,1,opt,name=supported,proto3" json:"supported,omitempty"`
	// reason provides optional explanation if supported is false
	Reason        string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SupportsResponse) Reset() {
	*x = SupportsResponse{}
	mi := &file_pulumicost_v1_costsource_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SupportsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupportsResponse) ProtoMessage() {}

func (x *SupportsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_costsource_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupportsResponse.ProtoReflect.Descriptor instead.
func (*SupportsResponse) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_costsource_proto_rawDescGZIP(), []int{3}
}

func (x *SupportsResponse) GetSupported() bool {
	if x != nil {
		return x.Supported
	}
	return false
}

func (x *SupportsResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// GetActualCostRequest contains parameters for retrieving historical cost data.
type GetActualCostRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// resource_id is a flexible ID per plugin (e.g., "i-abc123", "namespace/default")
	ResourceId string `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	// start timestamp for the cost query period
	Start *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start,proto3" json:"start,omitempty"`
	// end timestamp for the cost query period
	End *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
	// tags provide optional extra filters for cost retrieval
	Tags          map[string]string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetActualCostRequest) Reset() {
	*x = GetActualCostRequest{}
	mi := &file_pulumicost_v1_costsource_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetActualCostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActualCostRequest) ProtoMessage() {}

func (x *GetActualCostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_costsource_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActualCostRequest.ProtoReflect.Descriptor instead.
func (*GetActualCostRequest) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_costsource_proto_rawDescGZIP(), []int{4}
}

func (x *GetActualCostRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *GetActualCostRequest) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *GetActualCostRequest) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *GetActualCostRequest) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

// GetActualCostResponse contains the list of actual cost results.
type GetActualCostResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// results contains the actual cost data points for the requested period
	Results       []*ActualCostResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetActualCostResponse) Reset() {
	*x = GetActualCostResponse{}
	mi := &file_pulumicost_v1_costsource_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetActualCostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActualCostResponse) ProtoMessage() {}

func (x *GetActualCostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_costsource_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActualCostResponse.ProtoReflect.Descriptor instead.
func (*GetActualCostResponse) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_costsource_proto_rawDescGZIP(), []int{5}
}

func (x *GetActualCostResponse) GetResults() []*ActualCostResult {
	if x != nil {
		return x.Results
	}
	return nil
}

// GetProjectedCostRequest contains the resource descriptor for projected cost calculation.
type GetProjectedCostRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// resource contains the resource descriptor for cost projection
	Resource      *ResourceDescriptor `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProjectedCostRequest) Reset() {
	*x = GetProjectedCostRequest{}
	mi := &file_pulumicost_v1_costsource_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProjectedCostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectedCostRequest) ProtoMessage() {}

func (x *GetProjectedCostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_costsource_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectedCostRequest.ProtoReflect.Descriptor instead.
func (*GetProjectedCostRequest) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_costsource_proto_rawDescGZIP(), []int{6}
}

func (x *GetProjectedCostRequest) GetResource() *ResourceDescriptor {
	if x != nil {
		return x.Resource
	}
	return nil
}

// GetProjectedCostResponse contains projected cost information.
type GetProjectedCostResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// unit_price is the price per unit (aligned with PricingSpec.billing_mode)
	UnitPrice float64 `protobuf:"fixed64,1,opt,name=unit_price,json=unitPrice,proto3" json:"unit_price,omitempty"`
	// currency for the pricing (e.g., "USD")
	Currency string `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	// cost_per_month is a convenience field for a typical 30-day month
	CostPerMonth float64 `protobuf:"fixed64,3,opt,name=cost_per_month,json=costPerMonth,proto3" json:"cost_per_month,omitempty"`
	// billing_detail provides context (e.g., "on-demand", "kubecost-avg-daily")
	BillingDetail string `protobuf:"bytes,4,opt,name=billing_detail,json=billingDetail,proto3" json:"billing_detail,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProjectedCostResponse) Reset() {
	*x = GetProjectedCostResponse{}
	mi := &file_pulumicost_v1_costsource_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProjectedCostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectedCostResponse) ProtoMessage() {}

func (x *GetProjectedCostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_costsource_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectedCostResponse.ProtoReflect.Descriptor instead.
func (*GetProjectedCostResponse) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_costsource_proto_rawDescGZIP(), []int{7}
}

func (x *GetProjectedCostResponse) GetUnitPrice() float64 {
	if x != nil {
		return x.UnitPrice
	}
	return 0
}

func (x *GetProjectedCostResponse) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *GetProjectedCostResponse) GetCostPerMonth() float64 {
	if x != nil {
		return x.CostPerMonth
	}
	return 0
}

func (x *GetProjectedCostResponse) GetBillingDetail() string {
	if x != nil {
		return x.BillingDetail
	}
	return ""
}

// GetPricingSpecRequest contains the resource descriptor for pricing specification.
type GetPricingSpecRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// resource contains the resource descriptor for pricing specification
	Resource      *ResourceDescriptor `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPricingSpecRequest) Reset() {
	*x = GetPricingSpecRequest{}
	mi := &file_pulumicost_v1_costsource_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPricingSpecRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPricingSpecRequest) ProtoMessage() {}

func (x *GetPricingSpecRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_costsource_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPricingSpecRequest.ProtoReflect.Descriptor instead.
func (*GetPricingSpecRequest) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_costsource_proto_rawDescGZIP(), []int{8}
}

func (x *GetPricingSpecRequest) GetResource() *ResourceDescriptor {
	if x != nil {
		return x.Resource
	}
	return nil
}

// GetPricingSpecResponse contains the detailed pricing specification.
type GetPricingSpecResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// spec contains the complete pricing specification for the resource
	Spec          *PricingSpec `protobuf:"bytes,1,opt,name=spec,proto3" json:"spec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPricingSpecResponse) Reset() {
	*x = GetPricingSpecResponse{}
	mi := &file_pulumicost_v1_costsource_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPricingSpecResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPricingSpecResponse) ProtoMessage() {}

func (x *GetPricingSpecResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_costsource_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPricingSpecResponse.ProtoReflect.Descriptor instead.
func (*GetPricingSpecResponse) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_costsource_proto_rawDescGZIP(), []int{9}
}

func (x *GetPricingSpecResponse) GetSpec() *PricingSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

// ResourceDescriptor describes a cloud resource for cost analysis.
type ResourceDescriptor struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// provider identifies the cloud provider ("aws", "azure", "gcp", "kubernetes", "custom")
	Provider string `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	// resource_type specifies the resource type (e.g., "ec2", "s3", "k8s-namespace", "vm")
	ResourceType string `protobuf:"bytes,2,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	// sku is the provider SKU or instance size where applicable
	Sku string `protobuf:"bytes,3,opt,name=sku,proto3" json:"sku,omitempty"`
	// region specifies the deployment region (e.g., "us-east-1")
	Region string `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	// tags provide label/tag hints for resource identification (e.g., app=web)
	Tags          map[string]string `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceDescriptor) Reset() {
	*x = ResourceDescriptor{}
	mi := &file_pulumicost_v1_costsource_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceDescriptor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceDescriptor) ProtoMessage() {}

func (x *ResourceDescriptor) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_costsource_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceDescriptor.ProtoReflect.Descriptor instead.
func (*ResourceDescriptor) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_costsource_proto_rawDescGZIP(), []int{10}
}

func (x *ResourceDescriptor) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *ResourceDescriptor) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

func (x *ResourceDescriptor) GetSku() string {
	if x != nil {
		return x.Sku
	}
	return ""
}

func (x *ResourceDescriptor) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ResourceDescriptor) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

// ActualCostResult represents a single cost data point.
type ActualCostResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// timestamp indicates the point-in-time or bucket start for this cost data
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// cost is the total cost in the specified currency for the period/bucket
	Cost float64 `protobuf:"fixed64,2,opt,name=cost,proto3" json:"cost,omitempty"`
	// usage_amount is the optional usage amount aligned with BillingMode
	UsageAmount float64 `protobuf:"fixed64,3,opt,name=usage_amount,json=usageAmount,proto3" json:"usage_amount,omitempty"`
	// usage_unit specifies the unit of usage (e.g., "hour", "GB", "request")
	UsageUnit string `protobuf:"bytes,4,opt,name=usage_unit,json=usageUnit,proto3" json:"usage_unit,omitempty"`
	// source identifies the data source (e.g., "kubecost", "flexera")
	Source        string `protobuf:"bytes,5,opt,name=source,proto3" json:"source,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActualCostResult) Reset() {
	*x = ActualCostResult{}
	mi := &file_pulumicost_v1_costsource_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActualCostResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActualCostResult) ProtoMessage() {}

func (x *ActualCostResult) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_costsource_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActualCostResult.ProtoReflect.Descriptor instead.
func (*ActualCostResult) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_costsource_proto_rawDescGZIP(), []int{11}
}

func (x *ActualCostResult) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ActualCostResult) GetCost() float64 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *ActualCostResult) GetUsageAmount() float64 {
	if x != nil {
		return x.UsageAmount
	}
	return 0
}

func (x *ActualCostResult) GetUsageUnit() string {
	if x != nil {
		return x.UsageUnit
	}
	return ""
}

func (x *ActualCostResult) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

// UsageMetricHint provides guidance on usage metrics for cost calculation.
type UsageMetricHint struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// metric specifies the usage metric name (e.g., "vcpu_hours", "storage_gb", "requests")
	Metric string `protobuf:"bytes,1,opt,name=metric,proto3" json:"metric,omitempty"`
	// unit specifies the metric unit (e.g., "hour", "GB", "count")
	Unit          string `protobuf:"bytes,2,opt,name=unit,proto3" json:"unit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UsageMetricHint) Reset() {
	*x = UsageMetricHint{}
	mi := &file_pulumicost_v1_costsource_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UsageMetricHint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsageMetricHint) ProtoMessage() {}

func (x *UsageMetricHint) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_costsource_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsageMetricHint.ProtoReflect.Descriptor instead.
func (*UsageMetricHint) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_costsource_proto_rawDescGZIP(), []int{12}
}

func (x *UsageMetricHint) GetMetric() string {
	if x != nil {
		return x.Metric
	}
	return ""
}

func (x *UsageMetricHint) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

// PricingSpec provides detailed pricing information for a specific resource type.
type PricingSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// provider identifies the cloud provider for this pricing specification
	Provider string `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	// resource_type specifies the type of resource being priced
	ResourceType string `protobuf:"bytes,2,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	// sku is the specific SKU or instance type identifier
	Sku string `protobuf:"bytes,3,opt,name=sku,proto3" json:"sku,omitempty"`
	// region specifies the geographic region for pricing
	Region string `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	// billing_mode defines how the resource is billed
	// (e.g., "per_hour", "per_gb_month", "per_request", "flat", "per_day", "per_cpu_hour")
	BillingMode string `protobuf:"bytes,5,opt,name=billing_mode,json=billingMode,proto3" json:"billing_mode,omitempty"`
	// rate_per_unit is the price per billing unit
	RatePerUnit float64 `protobuf:"fixed64,6,opt,name=rate_per_unit,json=ratePerUnit,proto3" json:"rate_per_unit,omitempty"`
	// currency specifies the pricing currency (e.g., "USD")
	Currency string `protobuf:"bytes,7,opt,name=currency,proto3" json:"currency,omitempty"`
	// description provides human-readable description of the pricing
	Description string `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	// metric_hints provide guidance on relevant usage metrics for cost calculation
	MetricHints []*UsageMetricHint `protobuf:"bytes,9,rep,name=metric_hints,json=metricHints,proto3" json:"metric_hints,omitempty"`
	// plugin_metadata contains plugin-specific extra metadata (keys are not guaranteed to be stable)
	PluginMetadata map[string]string `protobuf:"bytes,10,rep,name=plugin_metadata,json=pluginMetadata,proto3" json:"plugin_metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// source identifies where the pricing model originated
	// (e.g., "aws", "gcp", "azure", "kubecost", "flexera", "cloudability", "spec")
	Source        string `protobuf:"bytes,11,opt,name=source,proto3" json:"source,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PricingSpec) Reset() {
	*x = PricingSpec{}
	mi := &file_pulumicost_v1_costsource_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PricingSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PricingSpec) ProtoMessage() {}

func (x *PricingSpec) ProtoReflect() protoreflect.Message {
	mi := &file_pulumicost_v1_costsource_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PricingSpec.ProtoReflect.Descriptor instead.
func (*PricingSpec) Descriptor() ([]byte, []int) {
	return file_pulumicost_v1_costsource_proto_rawDescGZIP(), []int{13}
}

func (x *PricingSpec) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *PricingSpec) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

func (x *PricingSpec) GetSku() string {
	if x != nil {
		return x.Sku
	}
	return ""
}

func (x *PricingSpec) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *PricingSpec) GetBillingMode() string {
	if x != nil {
		return x.BillingMode
	}
	return ""
}

func (x *PricingSpec) GetRatePerUnit() float64 {
	if x != nil {
		return x.RatePerUnit
	}
	return 0
}

func (x *PricingSpec) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *PricingSpec) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PricingSpec) GetMetricHints() []*UsageMetricHint {
	if x != nil {
		return x.MetricHints
	}
	return nil
}

func (x *PricingSpec) GetPluginMetadata() map[string]string {
	if x != nil {
		return x.PluginMetadata
	}
	return nil
}

func (x *PricingSpec) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

var File_pulumicost_v1_costsource_proto protoreflect.FileDescriptor

const file_pulumicost_v1_costsource_proto_rawDesc = "" +
	"\n" +
	"\x1epulumicost/v1/costsource.proto\x12\rpulumicost.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\r\n" +
	"\vNameRequest\"\"\n" +
	"\fNameResponse\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"P\n" +
	"\x0fSupportsRequest\x12=\n" +
	"\bresource\x18\x01 \x01(\v2!.pulumicost.v1.ResourceDescriptorR\bresource\"H\n" +
	"\x10SupportsResponse\x12\x1c\n" +
	"\tsupported\x18\x01 \x01(\bR\tsupported\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\"\x93\x02\n" +
	"\x14GetActualCostRequest\x12\x1f\n" +
	"\vresource_id\x18\x01 \x01(\tR\n" +
	"resourceId\x120\n" +
	"\x05start\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x05start\x12,\n" +
	"\x03end\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x03end\x12A\n" +
	"\x04tags\x18\x04 \x03(\v2-.pulumicost.v1.GetActualCostRequest.TagsEntryR\x04tags\x1a7\n" +
	"\tTagsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"R\n" +
	"\x15GetActualCostResponse\x129\n" +
	"\aresults\x18\x01 \x03(\v2\x1f.pulumicost.v1.ActualCostResultR\aresults\"X\n" +
	"\x17GetProjectedCostRequest\x12=\n" +
	"\bresource\x18\x01 \x01(\v2!.pulumicost.v1.ResourceDescriptorR\bresource\"\xa2\x01\n" +
	"\x18GetProjectedCostResponse\x12\x1d\n" +
	"\n" +
	"unit_price\x18\x01 \x01(\x01R\tunitPrice\x12\x1a\n" +
	"\bcurrency\x18\x02 \x01(\tR\bcurrency\x12$\n" +
	"\x0ecost_per_month\x18\x03 \x01(\x01R\fcostPerMonth\x12%\n" +
	"\x0ebilling_detail\x18\x04 \x01(\tR\rbillingDetail\"V\n" +
	"\x15GetPricingSpecRequest\x12=\n" +
	"\bresource\x18\x01 \x01(\v2!.pulumicost.v1.ResourceDescriptorR\bresource\"H\n" +
	"\x16GetPricingSpecResponse\x12.\n" +
	"\x04spec\x18\x01 \x01(\v2\x1a.pulumicost.v1.PricingSpecR\x04spec\"\xf9\x01\n" +
	"\x12ResourceDescriptor\x12\x1a\n" +
	"\bprovider\x18\x01 \x01(\tR\bprovider\x12#\n" +
	"\rresource_type\x18\x02 \x01(\tR\fresourceType\x12\x10\n" +
	"\x03sku\x18\x03 \x01(\tR\x03sku\x12\x16\n" +
	"\x06region\x18\x04 \x01(\tR\x06region\x12?\n" +
	"\x04tags\x18\x05 \x03(\v2+.pulumicost.v1.ResourceDescriptor.TagsEntryR\x04tags\x1a7\n" +
	"\tTagsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xba\x01\n" +
	"\x10ActualCostResult\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x12\n" +
	"\x04cost\x18\x02 \x01(\x01R\x04cost\x12!\n" +
	"\fusage_amount\x18\x03 \x01(\x01R\vusageAmount\x12\x1d\n" +
	"\n" +
	"usage_unit\x18\x04 \x01(\tR\tusageUnit\x12\x16\n" +
	"\x06source\x18\x05 \x01(\tR\x06source\"=\n" +
	"\x0fUsageMetricHint\x12\x16\n" +
	"\x06metric\x18\x01 \x01(\tR\x06metric\x12\x12\n" +
	"\x04unit\x18\x02 \x01(\tR\x04unit\"\xf4\x03\n" +
	"\vPricingSpec\x12\x1a\n" +
	"\bprovider\x18\x01 \x01(\tR\bprovider\x12#\n" +
	"\rresource_type\x18\x02 \x01(\tR\fresourceType\x12\x10\n" +
	"\x03sku\x18\x03 \x01(\tR\x03sku\x12\x16\n" +
	"\x06region\x18\x04 \x01(\tR\x06region\x12!\n" +
	"\fbilling_mode\x18\x05 \x01(\tR\vbillingMode\x12\"\n" +
	"\rrate_per_unit\x18\x06 \x01(\x01R\vratePerUnit\x12\x1a\n" +
	"\bcurrency\x18\a \x01(\tR\bcurrency\x12 \n" +
	"\vdescription\x18\b \x01(\tR\vdescription\x12A\n" +
	"\fmetric_hints\x18\t \x03(\v2\x1e.pulumicost.v1.UsageMetricHintR\vmetricHints\x12W\n" +
	"\x0fplugin_metadata\x18\n" +
	" \x03(\v2..pulumicost.v1.PricingSpec.PluginMetadataEntryR\x0epluginMetadata\x12\x16\n" +
	"\x06source\x18\v \x01(\tR\x06source\x1aA\n" +
	"\x13PluginMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x012\xc1\x03\n" +
	"\x11CostSourceService\x12?\n" +
	"\x04Name\x12\x1a.pulumicost.v1.NameRequest\x1a\x1b.pulumicost.v1.NameResponse\x12K\n" +
	"\bSupports\x12\x1e.pulumicost.v1.SupportsRequest\x1a\x1f.pulumicost.v1.SupportsResponse\x12Z\n" +
	"\rGetActualCost\x12#.pulumicost.v1.GetActualCostRequest\x1a$.pulumicost.v1.GetActualCostResponse\x12c\n" +
	"\x10GetProjectedCost\x12&.pulumicost.v1.GetProjectedCostRequest\x1a'.pulumicost.v1.GetProjectedCostResponse\x12]\n" +
	"\x0eGetPricingSpec\x12$.pulumicost.v1.GetPricingSpecRequest\x1a%.pulumicost.v1.GetPricingSpecResponseB4Z2github.com/rshade/pulumicost-spec/sdk/go/proto;pbcb\x06proto3"

var (
	file_pulumicost_v1_costsource_proto_rawDescOnce sync.Once
	file_pulumicost_v1_costsource_proto_rawDescData []byte
)

func file_pulumicost_v1_costsource_proto_rawDescGZIP() []byte {
	file_pulumicost_v1_costsource_proto_rawDescOnce.Do(func() {
		file_pulumicost_v1_costsource_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pulumicost_v1_costsource_proto_rawDesc), len(file_pulumicost_v1_costsource_proto_rawDesc)))
	})
	return file_pulumicost_v1_costsource_proto_rawDescData
}

var file_pulumicost_v1_costsource_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_pulumicost_v1_costsource_proto_goTypes = []any{
	(*NameRequest)(nil),              // 0: pulumicost.v1.NameRequest
	(*NameResponse)(nil),             // 1: pulumicost.v1.NameResponse
	(*SupportsRequest)(nil),          // 2: pulumicost.v1.SupportsRequest
	(*SupportsResponse)(nil),         // 3: pulumicost.v1.SupportsResponse
	(*GetActualCostRequest)(nil),     // 4: pulumicost.v1.GetActualCostRequest
	(*GetActualCostResponse)(nil),    // 5: pulumicost.v1.GetActualCostResponse
	(*GetProjectedCostRequest)(nil),  // 6: pulumicost.v1.GetProjectedCostRequest
	(*GetProjectedCostResponse)(nil), // 7: pulumicost.v1.GetProjectedCostResponse
	(*GetPricingSpecRequest)(nil),    // 8: pulumicost.v1.GetPricingSpecRequest
	(*GetPricingSpecResponse)(nil),   // 9: pulumicost.v1.GetPricingSpecResponse
	(*ResourceDescriptor)(nil),       // 10: pulumicost.v1.ResourceDescriptor
	(*ActualCostResult)(nil),         // 11: pulumicost.v1.ActualCostResult
	(*UsageMetricHint)(nil),          // 12: pulumicost.v1.UsageMetricHint
	(*PricingSpec)(nil),              // 13: pulumicost.v1.PricingSpec
	nil,                              // 14: pulumicost.v1.GetActualCostRequest.TagsEntry
	nil,                              // 15: pulumicost.v1.ResourceDescriptor.TagsEntry
	nil,                              // 16: pulumicost.v1.PricingSpec.PluginMetadataEntry
	(*timestamppb.Timestamp)(nil),    // 17: google.protobuf.Timestamp
}
var file_pulumicost_v1_costsource_proto_depIdxs = []int32{
	10, // 0: pulumicost.v1.SupportsRequest.resource:type_name -> pulumicost.v1.ResourceDescriptor
	17, // 1: pulumicost.v1.GetActualCostRequest.start:type_name -> google.protobuf.Timestamp
	17, // 2: pulumicost.v1.GetActualCostRequest.end:type_name -> google.protobuf.Timestamp
	14, // 3: pulumicost.v1.GetActualCostRequest.tags:type_name -> pulumicost.v1.GetActualCostRequest.TagsEntry
	11, // 4: pulumicost.v1.GetActualCostResponse.results:type_name -> pulumicost.v1.ActualCostResult
	10, // 5: pulumicost.v1.GetProjectedCostRequest.resource:type_name -> pulumicost.v1.ResourceDescriptor
	10, // 6: pulumicost.v1.GetPricingSpecRequest.resource:type_name -> pulumicost.v1.ResourceDescriptor
	13, // 7: pulumicost.v1.GetPricingSpecResponse.spec:type_name -> pulumicost.v1.PricingSpec
	15, // 8: pulumicost.v1.ResourceDescriptor.tags:type_name -> pulumicost.v1.ResourceDescriptor.TagsEntry
	17, // 9: pulumicost.v1.ActualCostResult.timestamp:type_name -> google.protobuf.Timestamp
	12, // 10: pulumicost.v1.PricingSpec.metric_hints:type_name -> pulumicost.v1.UsageMetricHint
	16, // 11: pulumicost.v1.PricingSpec.plugin_metadata:type_name -> pulumicost.v1.PricingSpec.PluginMetadataEntry
	0,  // 12: pulumicost.v1.CostSourceService.Name:input_type -> pulumicost.v1.NameRequest
	2,  // 13: pulumicost.v1.CostSourceService.Supports:input_type -> pulumicost.v1.SupportsRequest
	4,  // 14: pulumicost.v1.CostSourceService.GetActualCost:input_type -> pulumicost.v1.GetActualCostRequest
	6,  // 15: pulumicost.v1.CostSourceService.GetProjectedCost:input_type -> pulumicost.v1.GetProjectedCostRequest
	8,  // 16: pulumicost.v1.CostSourceService.GetPricingSpec:input_type -> pulumicost.v1.GetPricingSpecRequest
	1,  // 17: pulumicost.v1.CostSourceService.Name:output_type -> pulumicost.v1.NameResponse
	3,  // 18: pulumicost.v1.CostSourceService.Supports:output_type -> pulumicost.v1.SupportsResponse
	5,  // 19: pulumicost.v1.CostSourceService.GetActualCost:output_type -> pulumicost.v1.GetActualCostResponse
	7,  // 20: pulumicost.v1.CostSourceService.GetProjectedCost:output_type -> pulumicost.v1.GetProjectedCostResponse
	9,  // 21: pulumicost.v1.CostSourceService.GetPricingSpec:output_type -> pulumicost.v1.GetPricingSpecResponse
	17, // [17:22] is the sub-list for method output_type
	12, // [12:17] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_pulumicost_v1_costsource_proto_init() }
func file_pulumicost_v1_costsource_proto_init() {
	if File_pulumicost_v1_costsource_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pulumicost_v1_costsource_proto_rawDesc), len(file_pulumicost_v1_costsource_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pulumicost_v1_costsource_proto_goTypes,
		DependencyIndexes: file_pulumicost_v1_costsource_proto_depIdxs,
		MessageInfos:      file_pulumicost_v1_costsource_proto_msgTypes,
	}.Build()
	File_pulumicost_v1_costsource_proto = out.File
	file_pulumicost_v1_costsource_proto_goTypes = nil
	file_pulumicost_v1_costsource_proto_depIdxs = nil
}
