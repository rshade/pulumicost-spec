name: CI

on:
  push:
    branches: [main, pricing-2]
  pull_request:
    branches: [main]

jobs:
  generate-and-test:
    name: Generate SDK and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25.1'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install npm dependencies
        run: npm install

      - name: Generate Go SDK
        run: make generate

      - name: Verify generated code is up-to-date
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "Generated code is not up-to-date."
            echo "Please run 'make generate' and commit changes."
            git status
            git diff
            exit 1
          fi

      - name: Tidy dependencies
        run: make tidy

      - name: Build all packages
        run: go build ./...

      - name: Run unit tests
        run: make test

      - name: Run integration tests
        run: go test -v -tags=integration ./sdk/go/testing/

      - name: Run conformance tests
        run: go test -v -run TestConformance ./sdk/go/testing/

      - name: Test coverage
        run: go test -v -coverprofile=coverage.out ./...

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.out
          fail_ci_if_error: false
          verbose: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  benchmark:
    name: Performance Benchmarks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25.1'

      - name: Generate Go SDK
        run: make generate

      - name: Run benchmarks
        run: go test -bench=. -benchmem ./sdk/go/testing/ > benchmark_results.txt

      - name: Upload benchmark results
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results
          path: benchmark_results.txt

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25.1'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install npm dependencies
        run: npm install

      - name: Generate Go SDK (required for linting)
        run: make generate

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v7
        with:
          version: v2.4.0
          args: --timeout=5m

      - name: Run buf lint
        run: make buf-lint

      - name: Run markdown linting
        run: make lint-markdown

  buf-lint:
    name: Buf Lint and Breaking Change Detection
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Buf lint
        run: make buf-lint

      - name: Buf breaking change detection
        run: |
          bin/buf breaking --against \
            'https://github.com/rshade/pulumicost-spec.git#branch=main'
        if: github.event_name == 'pull_request'

  validate-schema:
    name: Validate JSON Schema and Examples
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install npm dependencies
        run: npm install

      - name: Validate JSON schema
        run: npm run validate:schema

      - name: Validate examples against schema
        run: node validate_examples.js
